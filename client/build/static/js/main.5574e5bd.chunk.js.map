{"version":3,"sources":["themes/theme.js","helpers/APICalls/server.js","helpers/APICalls/auth.js","context/useAuthContext.jsx","helpers/accoutTypes.js","components/NavBar.jsx","helpers/APICalls/property.js","images/noun-building-4468880.png","images/noun-person-2005172.png","components/PropertyItem.jsx","helpers/currencyFormatter.js","components/forms/FormikTextField.jsx","components/forms/FormikMultiText.jsx","components/forms/FormikImage.jsx","context/useSnackbarContext.jsx","components/forms/formHelper.js","components/forms/PropertyForm.jsx","pages/Properties/PropertyHeader.jsx","components/TableView.jsx","components/TabTableView.jsx","components/TenantAvatarCell.jsx","components/LoadingView.jsx","helpers/dateFormatter.js","helpers/APICalls/tenant.js","components/forms/FormikSelectField.jsx","components/forms/UserForm.jsx","helpers/APICalls/maintenance.js","components/forms/FormikMultiImage.jsx","components/forms/MaintenanceForm.jsx","pages/Properties/PropertyView.jsx","components/PgSideAndView.jsx","components/SideNav.jsx","pages/Properties/PropertiesSideNav.jsx","pages/Properties/Properties.jsx","components/forms/UserFormBase.jsx","components/forms/UserFormTenant.jsx","pages/Dashboard.jsx","components/TenantItem.jsx","pages/Tenants/TenantHeader.jsx","components/SingleTableView.jsx","pages/Tenants/TenantView.jsx","pages/Tenants/TenantsSideNav.jsx","pages/Tenants/Tenants.jsx","pages/Maintenances/MaintenanceHeader.jsx","pages/Maintenances/MaintenanceView.jsx","pages/Maintenances/MaintenancesSideNav.jsx","pages/Maintenances/Maintenances.jsx","helpers/APICalls/invoice.js","pages/Invoices/InvoiceHeader.jsx","pages/Invoices/InvoiceView.jsx","pages/Invoices/InvoicesSideNav.jsx","pages/Invoices/Invoices.jsx","components/forms/LoginForm.jsx","pages/Login/Login.jsx","helpers/APICalls/lease.js","pages/Leases/LeaseHeader.jsx","pages/Leases/LeaseView.jsx","pages/Leases/LeasesSideNav.jsx","pages/Leases/Leases.jsx","components/ProtectedRoute.jsx","components/RedirectLoggedInRoute.jsx","pages/Unauthorized.jsx","components/forms/UserFormOwner.jsx","pages/Signup/Signup.jsx","pages/Profile/Profile.jsx","App.js","reportWebVitals.js","index.js"],"names":["theme","createTheme","typography","fontFamily","fontSize","button","textTransform","fontWeight","palette","primary","main","light","dark","contrastText","secondary","shape","borderRadius","serverPath","process","login","email","password","a","console","log","fetchOptions","method","headers","body","JSON","stringify","credentials","fetch","then","res","json","catch","error","message","loginWithCookies","logoutAPI","AuthContext","createContext","loggedInUser","undefined","userProfile","updateLoginContext","updateProfileContext","logout","setLoggedInUser","AuthProvider","children","useState","history","useHistory","useCallback","data","user","push","useEffect","checkLoginWithCookies","success","Provider","value","useAuth","useContext","acct","owner","tenant","maintenance","admin","linkStyle","my","mx","color","Nav","linkPaths","account_type","label","path","AppBar","position","elevation","sx","borderBottom","divider","Toolbar","flexWrap","Typography","variant","noWrap","flexGrow","map","lp","Link","component","RouterLink","to","activeClassName","underline","first_name","last_name","Button","onClick","getProperties","id","values","formData","FormData","image_url","append","units","newUnits","inputUnits","forEach","u","PropertyItem","address","property","Grid","item","display","mr","_id","alt","name","src","DefaultPropertyImage","loading","style","width","height","objectFit","Fragment","street_name","street_address","city","state","zip_code","length","filter","p","tenants","currencyformatter","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","FormikTextField","formikKey","props","useField","field","meta","TextField","fullWidth","helperText","touched","Boolean","onChange","MultiText","helpers","textData","setTextData","handleSort","arr","regex","RegExp","match","sort","b","join","setValue","InputLabel","htmlFor","render","arrayHelpers","index","String","Chip","size","onDelete","remove","multiline","rows","e","target","container","justifyContent","split","w","trim","FormikImage","defaultImage","avatar","direction","alignItems","File","URL","createObjectURL","onError","Avatar","Input","type","inputProps","accept","files","SnackBarContext","updateSnackBarMessage","SnackBarProvider","setMessage","open","setOpen","handleClose","snackbarHandleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","IconButton","useSnackBar","submittedForm","setSubmitting","onSuccess","PropertyForm","currentProperty","handleCancel","setDeleteSubmitting","initialValues","country","currUnits","validationSchema","Yup","required","min","of","handleDelete","deleteProperty","pathname","properties","propertyList","Paper","enableReinitialize","validateOnChange","onSubmit","editProperty","go","newProperty","handleSubmit","isSubmitting","handleChange","errors","noValidate","spacing","xs","sm","CircularProgress","Header","invoiceData","editMode","setEditMode","toggleEdit","currYear","moment","year","currMonth","month","currInvoices","invoice","due_date","totalCurrInvoces","reduce","acc","curr","Number","amount","paidCurrInvoces","paid_date","Object","keys","format","cost","tableCellStyle","md","float","before","content","TableView","columns","sortParams","selectedSort","setSelectedSort","sortedData","setSortedData","sorted","terms","sortTerm1","sortTerm2","propA","toString","toLowerCase","propB","prop2A","prop2B","mb","param","backgroundColor","alpha","Table","TableHead","TableRow","col","TableCell","TableBody","idx","borderColor","hideLabel","TabTableView","tabs","toggleLabel","toggleContent","isToggleMode","setIsToggleMode","toggleMode","flexDirection","TabContext","Box","TabList","newValue","tab","Tab","TabPanel","React","cloneElement","TenantAvatarCell","fullName","marginRight","LoadingView","loadingState","notFoundState","column","align","dateFormatter","date","getTenants","newTenant","editTenant","user_id","tenant_id","deleteTenant","FormikSelectField","itemArray","itemValue","itemLabel","select","MenuItem","UserForm","current","propertyData","setPropertyData","accountTypes","phone_number","unit","max","DefaultUserImage","disabled","media","f","fileObjs","fileUrls","FormikMultiImage","lg","Card","CardMedia","image","CardActions","minHeight","multiple","MaintenanceForm","currentMaintenance","tenantList","isTenant","title","status","location","tenantData","setTenantData","statusTypes","deleteMaintenance","editMaintenance","t","newMaintenance","PropertyView","propertyId","isAdd","tenantMap","setTenantMap","maintenanceData","setMaintenanceData","setInvoiceData","leaseData","setleaseData","getPropertyForId","maintenances","invoices","leases","tenantColumns","isLate","unpaidTenantsData","tentantTabs","maintenanceColumns","unCompleteMaintanceData","maintenanceTabs","maintenanceSortParams","invoiceColumns","is_late","currentInvoiceData","isAfter","invoiceTabs","invoiceSortParams","leaseColumns","lease","monthly_rent","start_date","end_date","currentLeaseData","leaseTabs","leaseSortParams","PgSideAndView","side","view","Container","mt","Panel","selectedId","itemContent","onSort","onSearch","onClear","searchTerm","setSearchTerm","handleSearch","InputProps","endAdornment","InputAdornment","edge","List","ListItemButton","selected","Divider","SideNav","searchParms","collapsedText","expanded","setExpanded","sortTerm","setSortTerm","panel","isExpanded","currentSelection","filtered","includes","term","handleClearSearch","Accordion","AccordionSummary","expandIcon","flexShrink","AccordionDetails","PropertiesSideNav","ListItemIcon","paddingRight","ListItemText","Properties","useParams","currentPropertyId","setCurrentPropertyId","propertiesData","setPropertiesData","useLocation","replace","UserFormBase","deleteSubmitting","child","childNamespace","childValidationSchema","childInitialValues","UserFormTenant","namespace","Dashboard","TenantItem","currentTenant","SingleTableView","TenantView","tenantId","setLeaseData","getTenantForId","TenantSideNav","ListItemAvatar","Tenants","currentTenantId","setCurrentTenantId","MaintenanceView","maintenanceId","getMaintenanceForId","MaintenanceSideNav","Maintenance","currentMaintenanceId","setCurrentMaintenanceId","getMaintenances","currentInvoice","InvoiceView","invoiceId","getInvoiceForId","InvoiceSideNav","Invoices","currentInvoiceId","setCurrentInvoiceId","getInvoices","LoginForm","maxWidth","CssBaseline","marginTop","m","bgcolor","autoComplete","autoFocus","href","LogIn","demoLogin","currentLease","LeaseView","leaseId","getLeaseForId","LeaseSideNav","Leases","currentLeaseId","setCurrentLeaseId","getLeases","ProtectedRoute","Comp","allow","rest","from","RedirectLoggedInRoute","justify","Unauthorized","UserFormOwner","SignUp","Profile","App","ThemeProvider","exact","Login","Maintenances","Signup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5574e5bd.chunk.js","sourcesContent":["import { createTheme } from \"@mui/material/styles\";\n\nexport const theme = createTheme({\n  typography: {\n    fontFamily: '\"Roboto\", \"Open Sans\", \"sans-serif\" ',\n    fontSize: 12,\n    button: {\n      textTransform: \"none\",\n      fontWeight: 700,\n    },\n  },\n  palette: {\n    // primary: { main: \"#f04826\" }, //pink\n    primary: {\n      main: \"#0a2d26\",\n      light: \"#34564e\",\n      dark: \"#000400\",\n      contrastText: \"#fff\",\n    }, //green\n    secondary: {\n      main: \"#db9769\",\n      light: \"#ffc898\",\n      dark: \"#a7693d\",\n      contrastText: \"#000\",\n    }, //tan\n  },\n  shape: {\n    borderRadius: 3,\n  },\n});\n","let serverPath;\r\nif (process.env.NODE_ENV === \"development\")\r\n  serverPath = \"http://localhost:3001\";\r\nelse serverPath = process.env.REACT_APP_SERVER || \"\";\r\n// const serverPath = process.env.REACT_APP_SERVER || \"\";\r\n\r\nexport default serverPath;\r\n","import serverPath from \"./server\";\r\n\r\nexport async function login(email, password) {\r\n  console.log(email, password);\r\n  const fetchOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ email, password }),\r\n    credentials: \"include\",\r\n  };\r\n  return await fetch(`${serverPath}/auth/login`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n\r\nexport async function loginWithCookies() {\r\n  const fetchOptions = {\r\n    method: \"GET\",\r\n    credentials: \"include\",\r\n  };\r\n  return await fetch(`${serverPath}/auth/user`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n\r\nexport async function logoutAPI() {\r\n  const fetchOptions = {\r\n    method: \"GET\",\r\n    credentials: \"include\",\r\n  };\r\n  return await fetch(`${serverPath}/auth/logout`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n","import {\n  useState,\n  useContext,\n  createContext,\n  useEffect,\n  useCallback,\n} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { loginWithCookies, logoutAPI } from \"../helpers/APICalls/auth\";\n\nexport const AuthContext = createContext({\n  loggedInUser: undefined,\n  userProfile: undefined,\n  updateLoginContext: () => null,\n  updateProfileContext: () => null,\n  logout: () => null,\n  // for notifications error\n  setLoggedInUser: () => null,\n});\n\nexport const AuthProvider = ({ children }) => {\n  // default undefined before loading, once loaded provide user or null if logged out\n  const [loggedInUser, setLoggedInUser] = useState();\n  const history = useHistory();\n  const updateLoginContext = useCallback((data) => {\n    setLoggedInUser(data.user);\n  }, []);\n\n  const logout = useCallback(async () => {\n    // needed to remove token cookie\n\n    await logoutAPI()\n      .then(() => {\n        setLoggedInUser(null);\n        console.log(\"LOGOUT\");\n        history.push(\"/login\");\n      })\n      .catch((error) => console.error(error));\n  }, [history]);\n\n  // use our cookies to check if we can login straight away\n  useEffect(() => {\n    const checkLoginWithCookies = async () => {\n      await loginWithCookies().then((data) => {\n        if (data.success) {\n          updateLoginContext(data.success, false);\n        } else {\n          // don't need to provide error feedback as this just means user doesn't have saved cookies or the cookies have not been authenticated on the backend\n          setLoggedInUser(null);\n        }\n      });\n    };\n    checkLoginWithCookies();\n  }, [updateLoginContext, history]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        loggedInUser,\n        updateLoginContext,\n        logout,\n        setLoggedInUser,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n","const acct = {\r\n  owner: \"owner\",\r\n  tenant: \"tenant\",\r\n  maintenance: \"maintenance\",\r\n  admin: \"admin\",\r\n};\r\n\r\nexport default acct;\r\n","import React from \"react\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { NavLink as RouterLink } from \"react-router-dom\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useAuth } from \"../context/useAuthContext\";\r\nimport acct from \"../helpers/accoutTypes\";\r\nimport { theme } from \"./../themes/theme\";\r\n\r\nconst linkStyle = {\r\n  my: 1,\r\n  mx: 1.5,\r\n  \"&.selected\": {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n};\r\nexport default function Nav() {\r\n  const { loggedInUser, logout } = useAuth();\r\n\r\n  let linkPaths;\r\n\r\n  if (loggedInUser && loggedInUser.account_type === acct.owner) {\r\n    linkPaths = [\r\n      { label: \"Dashboard\", path: \"/dashboard\" },\r\n      { label: \"Properties\", path: \"/properties\" },\r\n      { label: \"Tenants\", path: \"/tenants\" },\r\n      { label: \"Maintenances\", path: \"/maintenances\" },\r\n      { label: \"Invoices\", path: \"/invoices\" },\r\n      { label: \"Leases\", path: \"/leases\" },\r\n    ];\r\n  } else {\r\n    linkPaths = [\r\n      { label: \"Dashboard\", path: \"/dashboard\" },\r\n      { label: \"Maintenances\", path: \"/maintenances\" },\r\n      { label: \"Invoices\", path: \"/invoices\" },\r\n      { label: \"Leases\", path: \"/leases\" },\r\n    ];\r\n  }\r\n  return (\r\n    <AppBar\r\n      position=\"static\"\r\n      color=\"default\"\r\n      elevation={0}\r\n      sx={{ borderBottom: (theme) => `1px solid ${theme.palette.divider}` }}\r\n    >\r\n      <Toolbar sx={{ flexWrap: \"wrap\" }}>\r\n        <Typography variant=\"h4\" color=\"secondary\" noWrap sx={{ flexGrow: 1 }}>\r\n          tuk•den\r\n        </Typography>\r\n\r\n        <nav>\r\n          {linkPaths.map((lp) => (\r\n            <Link\r\n              key={lp.label}\r\n              component={RouterLink}\r\n              variant=\"button\"\r\n              color=\"textPrimary\"\r\n              to={lp.path}\r\n              activeClassName=\"selected\"\r\n              sx={linkStyle}\r\n            >\r\n              {lp.label}\r\n            </Link>\r\n          ))}\r\n        </nav>\r\n        {loggedInUser && (\r\n          <>\r\n            <Link component={RouterLink} to=\"/profile\" underline=\"none\">\r\n              {`${loggedInUser.first_name} ${loggedInUser.last_name}`}\r\n            </Link>\r\n            <Button\r\n              onClick={() => logout()}\r\n              variant=\"outlined\"\r\n              sx={{ my: 1, mx: 1.5 }}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </>\r\n        )}\r\n        {!loggedInUser && (\r\n          <Button\r\n            component={RouterLink}\r\n            to={\"/login\"}\r\n            variant=\"outlined\"\r\n            sx={{ my: 1, mx: 1.5 }}\r\n          >\r\n            Login\r\n          </Button>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import serverPath from \"./server\";\r\n\r\nexport async function getProperties() {\r\n  const fetchOptions = {\r\n    method: \"GET\",\r\n    credentials: \"include\",\r\n  };\r\n  return await fetch(`${serverPath}/property`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n\r\nexport async function getPropertyForId(id) {\r\n  const fetchOptions = {\r\n    method: \"GET\",\r\n    credentials: \"include\",\r\n  };\r\n  return await fetch(`${serverPath}/property/${id}`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n\r\nexport async function newProperty(values) {\r\n  let formData = new FormData();\r\n  const { image_url, ...data } = values;\r\n  formData.append(\"file\", image_url);\r\n  formData.append(\"data\", JSON.stringify(data));\r\n\r\n  const fetchOptions = {\r\n    method: \"POST\",\r\n    credentials: \"include\",\r\n    body: formData,\r\n  };\r\n  return await fetch(`${serverPath}/property/new`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n\r\nexport async function editProperty(id, values) {\r\n  let formData = new FormData();\r\n  console.log(values);\r\n  const { image_url, units, ...data } = values;\r\n  formData.append(\"file\", image_url);\r\n  data.newUnits = [];\r\n  data.inputUnits = [];\r\n  units.forEach((u) => {\r\n    if (typeof u === \"string\") {\r\n      data.newUnits.push(u);\r\n    } else {\r\n      data.inputUnits.push(u);\r\n    }\r\n  });\r\n  console.log(data);\r\n  formData.append(\"data\", JSON.stringify(data));\r\n\r\n  const fetchOptions = {\r\n    method: \"PATCH\",\r\n    credentials: \"include\",\r\n    body: formData,\r\n  };\r\n  return await fetch(`${serverPath}/property/edit/${id}`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n\r\nexport async function deleteProperty(id) {\r\n  const fetchOptions = {\r\n    method: \"Delete\",\r\n    credentials: \"include\",\r\n  };\r\n  return await fetch(`${serverPath}/property/delete/${id}`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n","export default __webpack_public_path__ + \"static/media/noun-building-4468880.8de9042b.png\";","export default __webpack_public_path__ + \"static/media/noun-person-2005172.f53fd7df.png\";","import React from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { DefaultPropertyImage } from \"../images/images\";\r\nimport { useAuth } from \"../context/useAuthContext\";\r\nimport acct from \"../helpers/accoutTypes\";\r\n\r\nexport default function PropertyItem({ property }) {\r\n  const { loggedInUser } = useAuth();\r\n\r\n  const fullAddress = (address) => {\r\n    return (\r\n      <React.Fragment>\r\n        {`${address.street_name} ${address.street_address}`} <br />\r\n        {`${address.city} ${address.state} ${address.zip_code}`}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid item sx={{ display: \"flex\" }}>\r\n      <Grid item sx={{ mr: 1 }}>\r\n        <Link\r\n          underline=\"none\"\r\n          component={\r\n            loggedInUser.account_type === acct.tenant ? Link : RouterLink\r\n          }\r\n          to={`/properties/${property._id}`}\r\n        >\r\n          <img\r\n            alt={property.name}\r\n            src={property.image_url || DefaultPropertyImage}\r\n            loading=\"lazy\"\r\n            style={{ width: \"100px\", height: \"60px\", objectFit: \"cover\" }}\r\n          />\r\n        </Link>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"body1\" color=\"primary\">\r\n          {property.name}\r\n        </Typography>\r\n        <Typography\r\n          sx={{ display: \"block\" }}\r\n          component=\"span\"\r\n          variant=\"body2\"\r\n          color=\"text.primary\"\r\n        >\r\n          {fullAddress(property.address)}\r\n        </Typography>\r\n        <Typography\r\n          sx={{ display: \"block\" }}\r\n          component=\"span\"\r\n          variant=\"body2\"\r\n          color=\"text.primary\"\r\n        >\r\n          Units:\r\n          {property.units.length} | Availability:\r\n          {property.units.filter((p) => !p.tenants.length > 0).length}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","const currencyformatter = new Intl.NumberFormat(\"en-US\", {\r\n  style: \"currency\",\r\n  currency: \"USD\",\r\n  minimumFractionDigits: 0,\r\n  maximumFractionDigits: 0,\r\n});\r\n\r\nexport default currencyformatter;\r\n","import TextField from \"@mui/material/TextField\";\r\nimport { useField } from \"formik\";\r\n\r\nexport default function FormikTextField({ label, formikKey, ...props }) {\r\n  const [field, meta] = useField(formikKey);\r\n  return (\r\n    <TextField\r\n      id={field.name}\r\n      name={field.name}\r\n      label={label}\r\n      fullWidth\r\n      variant=\"standard\"\r\n      helperText={meta.touched ? meta.error : \"\"}\r\n      error={meta.touched && Boolean(meta.error)}\r\n      value={field.value}\r\n      onChange={field.onChange}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useField, FieldArray } from \"formik\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nexport default function MultiText({ label, formikKey, ...props }) {\r\n  const [field, meta, helpers] = useField(formikKey);\r\n  const [textData, setTextData] = useState(\"\");\r\n\r\n  function handleAddText() {\r\n    helpers.setValue([\r\n      ...field.value,\r\n      ...textData.split(\",\").filter((w) => w && w.trim()),\r\n    ]);\r\n    setTextData(\"\");\r\n  }\r\n\r\n  function handleSort() {\r\n    let arr = field.value.map((item) => {\r\n      let regex = new RegExp(\"([0-9]+)|([a-zA-Z]+)\", \"g\");\r\n      return item.match(regex);\r\n    });\r\n\r\n    arr.sort((a, b) => {\r\n      if (a[0] === b[0]) {\r\n        return a[1] - b[1];\r\n      }\r\n      return a[0] - b[0];\r\n    });\r\n\r\n    arr = arr.map((item) => item.join(\"\"));\r\n    helpers.setValue(arr);\r\n  }\r\n\r\n  return (\r\n    <Grid>\r\n      <InputLabel\r\n        htmlFor={field.name}\r\n        error={meta.touched && Boolean(meta.error)}\r\n      >\r\n        {label}\r\n      </InputLabel>\r\n      <FieldArray\r\n        id={field.name}\r\n        name={field.name}\r\n        render={(arrayHelpers) => (\r\n          <Grid>\r\n            {field.value.map((item, index) => {\r\n              if (item instanceof String) {\r\n                return (\r\n                  <Chip\r\n                    size=\"small\"\r\n                    key={index}\r\n                    label={item}\r\n                    variant=\"outlined\"\r\n                    onDelete={() => arrayHelpers.remove(index)}\r\n                  />\r\n                );\r\n              } else {\r\n                return (\r\n                  <Chip\r\n                    size=\"small\"\r\n                    key={index}\r\n                    label={item.name || item}\r\n                    variant=\"outlined\"\r\n                    onDelete={() => arrayHelpers.remove(index)}\r\n                  />\r\n                );\r\n              }\r\n            })}\r\n            {field.value.length > 1 && (\r\n              <Button component=\"label\" onClick={handleSort}>\r\n                sort\r\n              </Button>\r\n            )}\r\n          </Grid>\r\n        )}\r\n      />\r\n      <TextField\r\n        id={field.name}\r\n        name={field.name}\r\n        // label={label}\r\n        fullWidth\r\n        multiline\r\n        rows={4}\r\n        variant=\"standard\"\r\n        helperText={\r\n          meta.touched && meta.error\r\n            ? meta.error\r\n            : \"add units(add multiple separated by a comma)\"\r\n        }\r\n        error={meta.touched && Boolean(meta.error)}\r\n        onChange={(e) => setTextData(e.target.value)}\r\n        value={textData}\r\n      />\r\n      <Grid container justifyContent=\"flex-end\">\r\n        <Button component=\"label\" onClick={handleAddText}>\r\n          add\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport Input from \"@mui/material/Input\";\r\nimport { useField } from \"formik\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nexport default function FormikImage({\r\n  label,\r\n  formikKey,\r\n  defaultImage,\r\n  avatar,\r\n  ...props\r\n}) {\r\n  const [field, helpers] = useField(formikKey);\r\n  function handleImageError(e) {\r\n    e.target.src = defaultImage;\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n    >\r\n      {!avatar && (\r\n        <Grid item>\r\n          <img\r\n            src={\r\n              field.value instanceof File\r\n                ? URL.createObjectURL(field.value)\r\n                : field.value\r\n                ? field.value\r\n                : defaultImage\r\n            }\r\n            style={{\r\n              width: \"300px\",\r\n              height: \"180px\",\r\n              objectFit: \"cover\",\r\n            }}\r\n            alt={label}\r\n            onError={handleImageError}\r\n          />\r\n        </Grid>\r\n      )}\r\n      {avatar && (\r\n        <Grid item>\r\n          <Avatar\r\n            src={\r\n              field.value instanceof File\r\n                ? URL.createObjectURL(field.value)\r\n                : field.value\r\n                ? field.value\r\n                : defaultImage\r\n            }\r\n            sx={{ width: 200, height: 200 }}\r\n          />\r\n        </Grid>\r\n      )}\r\n      <Grid item>\r\n        <Button component=\"label\">\r\n          change\r\n          <Input\r\n            sx={{ display: \"none\" }}\r\n            type=\"file\"\r\n            inputProps={{\r\n              accept: \"image/*\",\r\n            }}\r\n            id={field.name}\r\n            onChange={(e) => helpers.setValue(e.target.files[0])}\r\n          />\r\n        </Button>\r\n        {field.value && (\r\n          <Button onClick={() => helpers.setValue(\"\")}> remove</Button>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { useState, useContext, createContext, useCallback } from \"react\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nexport const SnackBarContext = createContext({\n  updateSnackBarMessage: () => null,\n});\n\nexport const SnackBarProvider = ({ children }) => {\n  const [message, setMessage] = useState(null);\n  const [open, setOpen] = useState(false);\n\n  const updateSnackBarMessage = useCallback((message) => {\n    setMessage(message);\n    setOpen(true);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const snackbarHandleClose = useCallback((event, reason) => {\n    if (reason === \"clickaway\") return;\n    setOpen(false);\n  }, []);\n\n  return (\n    <SnackBarContext.Provider value={{ updateSnackBarMessage }}>\n      {children}\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={snackbarHandleClose}\n        message={message}\n        action={\n          <IconButton\n            size=\"small\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            onClick={handleClose}\n          >\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        }\n      />\n    </SnackBarContext.Provider>\n  );\n};\n\nexport function useSnackBar() {\n  return useContext(SnackBarContext);\n}\n","export const submittedForm = (\r\n  updateSnackBarMessage,\r\n  setSubmitting,\r\n  data,\r\n  onSuccess\r\n) => {\r\n  setSubmitting(true);\r\n  if (data.error) {\r\n    setSubmitting(false);\r\n    updateSnackBarMessage(data.error.message);\r\n  } else if (data.success) {\r\n    console.log(\"SUCCESS\", data.success);\r\n    onSuccess(data);\r\n    setSubmitting(false);\r\n  } else {\r\n    // should not get here from backend but this catch is for an unknown issue\r\n    setSubmitting(false);\r\n    updateSnackBarMessage(\"An unexpected error occurred. Please try again\");\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Button } from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  newProperty,\r\n  editProperty,\r\n  deleteProperty,\r\n} from \"../../helpers/APICalls/property\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FormikTextField from \"./FormikTextField\";\r\nimport FormikMultiText from \"./FormikMultiText\";\r\nimport FormikImage from \"./FormikImage\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { DefaultPropertyImage } from \"../../images/images\";\r\nimport { useSnackBar } from \"../../context/useSnackbarContext\";\r\nimport { submittedForm } from \"./formHelper\";\r\n\r\nexport default function PropertyForm({ currentProperty, handleCancel }) {\r\n  const history = useHistory();\r\n  const { updateSnackBarMessage } = useSnackBar();\r\n  const [deleteSubmitting, setDeleteSubmitting] = useState(false);\r\n\r\n  const initialValues = {\r\n    name: \"\",\r\n    units: [],\r\n    image_url: \"\",\r\n    street_name: \"\",\r\n    street_address: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    zip_code: \"\",\r\n    country: \"\",\r\n  };\r\n\r\n  if (currentProperty) {\r\n    initialValues.name = currentProperty.name;\r\n    initialValues.image_url = currentProperty.image_url;\r\n    initialValues.street_name = currentProperty.address.street_name;\r\n    initialValues.street_address = currentProperty.address.street_address;\r\n    initialValues.city = currentProperty.address.city;\r\n    initialValues.state = currentProperty.address.state;\r\n    initialValues.zip_code = currentProperty.address.zip_code;\r\n    initialValues.country = currentProperty.address.country;\r\n    let currUnits = currentProperty.units.map((u) => ({\r\n      _id: u._id,\r\n      name: u.name,\r\n    }));\r\n    initialValues.units = currUnits;\r\n  }\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .required(\"Property Name is required\")\r\n      .min(5, \"Property Name is too short\"),\r\n    // units: Yup.array().of(Yup.string()).min(1, \"units is required\"),\r\n    units: Yup.array().of(Yup.mixed()).min(1, \"units is required\"),\r\n    image_url: Yup.mixed(),\r\n    street_name: Yup.string().required(\"street name is required\"),\r\n    street_address: Yup.string().required(\"street address  is required\"),\r\n    city: Yup.string().required(\"city is required\"),\r\n    state: Yup.string().required(\"state is required\"),\r\n    zip_code: Yup.string().required(\"zip code is required\"),\r\n    country: Yup.string().required(\"country is required\"),\r\n  });\r\n  function handleSubmit(values, { setSubmitting }) {\r\n    if (currentProperty) {\r\n      editProperty(currentProperty._id, values).then((data) => {\r\n        const onSuccess = () => history.go(0);\r\n        submittedForm(updateSnackBarMessage, setSubmitting, data, onSuccess);\r\n      });\r\n    } else {\r\n      newProperty(values).then((data) => {\r\n        const onSuccess = () => {\r\n          history.push(`/properties/${data.success.property._id}`);\r\n        };\r\n        submittedForm(updateSnackBarMessage, setSubmitting, data, onSuccess);\r\n      });\r\n    }\r\n  }\r\n  function handleDelete() {\r\n    deleteProperty(currentProperty._id).then((data) => {\r\n      function onSuccess(data) {\r\n        history.push({\r\n          pathname: `/properties`,\r\n          state: { properties: data.success.propertyList },\r\n        });\r\n      }\r\n      submittedForm(\r\n        updateSnackBarMessage,\r\n        setDeleteSubmitting,\r\n        data,\r\n        onSuccess\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Grid item>\r\n      <Paper sx={{ p: 2 }}>\r\n        <Formik\r\n          enableReinitialize\r\n          validateOnChange\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            handleChange,\r\n            values,\r\n            touched,\r\n            errors,\r\n            isSubmitting,\r\n          }) => (\r\n            <form onSubmit={handleSubmit} noValidate>\r\n              <Typography component=\"h2\" variant=\"h6\" color=\"primary\">\r\n                Property\r\n              </Typography>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                  <FormikImage\r\n                    label=\"image\"\r\n                    formikKey=\"image_url\"\r\n                    defaultImage={DefaultPropertyImage}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormikTextField label=\"Property name\" formikKey=\"name\" />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormikTextField\r\n                    label=\"Street name\"\r\n                    formikKey=\"street_name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormikTextField\r\n                    label=\"Street address\"\r\n                    formikKey=\"street_address\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormikTextField label=\"City\" formikKey=\"city\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormikTextField\r\n                    label=\"State/Province/Region\"\r\n                    formikKey=\"state\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormikTextField\r\n                    label=\"Zip / Postal code\"\r\n                    formikKey=\"zip_code\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormikTextField label=\"Country\" formikKey=\"country\" />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormikMultiText label=\"Units\" formikKey=\"units\" />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container spacing={1} justifyContent=\"flex-end\">\r\n                <Grid item>\r\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    {isSubmitting ? (\r\n                      <CircularProgress style={{ color: \"white\" }} />\r\n                    ) : currentProperty ? (\r\n                      \"Update\"\r\n                    ) : (\r\n                      \"Create\"\r\n                    )}\r\n                  </Button>\r\n                </Grid>\r\n                {currentProperty && (\r\n                  <>\r\n                    <Grid item>\r\n                      <Button onClick={handleDelete} variant=\"outlined\">\r\n                        Delete\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button onClick={handleCancel} variant=\"outlined\">\r\n                        Cancel\r\n                      </Button>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport moment from \"moment\";\r\nimport PropertyItem from \"../../components/PropertyItem\";\r\nimport currencyformatter from \"../../helpers/currencyFormatter\";\r\nimport PropertyForm from \"./../../components/forms/PropertyForm\";\r\n\r\nexport default function Header({ currentProperty, invoiceData }) {\r\n  const [editMode, setEditMode] = useState(false);\r\n  function toggleEdit() {\r\n    setEditMode(!editMode);\r\n  }\r\n\r\n  const currYear = moment().year();\r\n  const currMonth = moment().month();\r\n\r\n  const currInvoices = invoiceData.filter((invoice) => {\r\n    let year = moment(invoice.due_date).year();\r\n    let month = moment(invoice.due_date).month();\r\n    return currYear === year && currMonth === month;\r\n  });\r\n\r\n  const totalCurrInvoces = currInvoices.reduce(\r\n    (acc, curr) => (acc += Number(curr.amount)),\r\n    0\r\n  );\r\n  const paidCurrInvoces = currInvoices.reduce((acc, curr) => {\r\n    if (curr.paid_date) return (acc += Number(curr.amount));\r\n    return acc;\r\n  }, 0);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!editMode && (\r\n        <Grid item container spacing={3}>\r\n          {Object.keys(currentProperty).length > 0 && (\r\n            <PropertyItem property={currentProperty} />\r\n          )}\r\n\r\n          <Grid item>\r\n            <Typography variant=\"body1\" color=\"primary\">\r\n              Total Monthy Rent\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.primary\">\r\n              {`${currencyformatter.format(\r\n                paidCurrInvoces\r\n              )}/${currencyformatter.format(totalCurrInvoces)}`}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"body1\" color=\"primary\">\r\n              Total Cost\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.primary\">\r\n              {`${currencyformatter.format(currentProperty.cost)}`}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"body1\" color=\"primary\">\r\n              Total Revene\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.primary\">\r\n              {`${currencyformatter.format(\r\n                paidCurrInvoces - currentProperty.cost\r\n              )}`}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item sx={{ flexGrow: 1 }}>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Button variant=\"outlined\" onClick={toggleEdit}>\r\n                edit\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {editMode && (\r\n        <PropertyForm\r\n          currentProperty={currentProperty}\r\n          handleCancel={toggleEdit}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { Button } from \"@mui/material\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { theme } from \"./../themes/theme\";\r\nimport { alpha } from \"@mui/material\";\r\n\r\nconst tableCellStyle = {\r\n  display: { xs: \"block\", md: \"table-cell\" },\r\n  \"& span\": {\r\n    xs: { float: \"right\" },\r\n    md: { float: \"left\" },\r\n  },\r\n  borderBottom: {\r\n    xs: \"none\",\r\n    md: \"1px solid rgba(224, 224, 224, 1)\",\r\n  },\r\n};\r\nconst before = {\r\n  \"&::before\": {\r\n    xs: { content: \"attr(data-th)\" },\r\n    md: { content: '\"\"' },\r\n  },\r\n};\r\nexport default function TableView({ data, columns, sortParams }) {\r\n  const [selectedSort, setSelectedSort] = useState();\r\n  const [sortedData, setSortedData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (sortParams) setSelectedSort(sortParams[0]);\r\n  }, [sortParams]);\r\n\r\n  useEffect(() => {\r\n    let sorted = [...data];\r\n    if (selectedSort) {\r\n      const [sortTerm1, sortTerm2] = selectedSort.terms;\r\n\r\n      sorted = sorted.sort((a, b) => {\r\n        const propA = sortTerm1(a).toString().toLowerCase();\r\n        const propB = sortTerm1(b).toString().toLowerCase();\r\n\r\n        if (propA === propB) {\r\n          if (sortTerm2) {\r\n            const prop2A = sortTerm2(a).toString().toLowerCase();\r\n            const prop2B = sortTerm2(b).toString().toLowerCase();\r\n            if (prop2A === prop2B) return 0;\r\n            return prop2A > prop2B ? 1 : -1;\r\n          }\r\n          return 0;\r\n        }\r\n        return propA > propB ? 1 : -1;\r\n      });\r\n    }\r\n    setSortedData(sorted);\r\n  }, [data, selectedSort]);\r\n\r\n  const handleSort = (param) => {\r\n    setSelectedSort(param);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {sortParams && selectedSort && (\r\n        <Grid container justifyContent=\"flex-end\" sx={{ mb: 2 }}>\r\n          {sortParams.map((param) => (\r\n            <Button\r\n              key={param.label}\r\n              onClick={() => handleSort(param)}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              sx={\r\n                selectedSort.label === param.label\r\n                  ? {\r\n                      mr: 0.2,\r\n                      backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n                    }\r\n                  : { mr: 0.2 }\r\n              }\r\n            >\r\n              {param.label}\r\n            </Button>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n      <Table size=\"small\">\r\n        <TableHead sx={{ display: { xs: \"none\", md: \"table-header-group\" } }}>\r\n          <TableRow>\r\n            {columns.map((col) => (\r\n              <TableCell key={col.label}>{col.label}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {sortedData.map((item, idx) => (\r\n            <TableRow\r\n              key={item.id || idx}\r\n              sx={{ borderBottom: 1, borderColor: \"divider\" }}\r\n            >\r\n              {columns.map((col, idx) => (\r\n                <TableCell\r\n                  key={col.label + item.id}\r\n                  data-th={col.label}\r\n                  sx={\r\n                    col.hideLabel\r\n                      ? tableCellStyle\r\n                      : { ...tableCellStyle, ...before }\r\n                  }\r\n                >\r\n                  {col.content(item)}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport TabContext from \"@mui/lab/TabContext\";\r\nimport TabList from \"@mui/lab/TabList\";\r\nimport TabPanel from \"@mui/lab/TabPanel\";\r\nimport TableView from \"./TableView\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nexport default function TabTableView({\r\n  label,\r\n  tabs,\r\n  columns,\r\n  toggleLabel,\r\n  toggleContent,\r\n  sortParams,\r\n}) {\r\n  const [value, setValue] = useState(\"0\");\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const [isToggleMode, setIsToggleMode] = useState(false);\r\n  function toggleMode() {\r\n    setIsToggleMode(!isToggleMode);\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12}>\r\n        {!isToggleMode && (\r\n          <Paper sx={{ p: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n            <TabContext value={value}>\r\n              <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n                <Grid container>\r\n                  <Typography component=\"h2\" variant=\"h6\" color=\"primary\">\r\n                    {label}\r\n                  </Typography>\r\n\r\n                  {toggleLabel && (\r\n                    <Grid item sx={{ flexGrow: 1 }}>\r\n                      <Grid container justifyContent=\"flex-end\">\r\n                        <Button variant=\"outlined\" onClick={toggleMode}>\r\n                          {toggleLabel}\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n                <TabList\r\n                  onChange={handleChange}\r\n                  aria-label=\"lab API tabs example\"\r\n                >\r\n                  {tabs.map((tab, idx) => (\r\n                    <Tab\r\n                      key={tab.label + idx}\r\n                      label={tab.label}\r\n                      value={idx.toString()}\r\n                    />\r\n                  ))}\r\n                </TabList>\r\n              </Box>\r\n              {tabs.map((tab, idx) => (\r\n                <TabPanel\r\n                  key={tab.label + idx + \"panel\"}\r\n                  value={idx.toString()}\r\n                >\r\n                  <TableView\r\n                    data={tab.content}\r\n                    columns={columns}\r\n                    sortParams={sortParams}\r\n                  ></TableView>\r\n                </TabPanel>\r\n              ))}\r\n            </TabContext>\r\n          </Paper>\r\n        )}\r\n        {isToggleMode &&\r\n          React.cloneElement(toggleContent, { handleCancel: toggleMode })}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Grid } from \"@mui/material\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@mui/material/Link\";\r\n\r\nexport default function TenantAvatarCell({ tenant }) {\r\n  const fullName = (user) => {\r\n    return `${user.first_name}  ${user.last_name}`;\r\n  };\r\n  if (tenant) {\r\n    return (\r\n      <Link\r\n        underline=\"none\"\r\n        component={RouterLink}\r\n        to={`/tenants/${tenant._id}`}\r\n      >\r\n        <Grid container direction=\"row\" alignItems=\"center\">\r\n          <Avatar\r\n            sx={{ marginRight: \"1em\" }}\r\n            alt={fullName(tenant.user)}\r\n            src={tenant.user.image_url}\r\n          />\r\n          {fullName(tenant.user)}\r\n        </Grid>\r\n      </Link>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n","import React from \"react\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Grid } from \"@mui/material/\";\r\n\r\nexport default function LoadingView({\r\n  data,\r\n  loadingState,\r\n  notFoundState,\r\n  children,\r\n}) {\r\n  if (loadingState(data)) {\r\n    return (\r\n      <Grid\r\n        container\r\n        column\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <CircularProgress />\r\n      </Grid>\r\n    );\r\n  } else if (notFoundState(data)) {\r\n    return (\r\n      <Typography component=\"h2\" variant=\"h6\" color=\"primary\" align=\"center\">\r\n        Not Found\r\n      </Typography>\r\n    );\r\n  } else {\r\n    return children;\r\n  }\r\n}\r\n","import moment from \"moment\";\r\n\r\nexport default function dateFormatter(date) {\r\n  return moment(date).format(\"ll\");\r\n}\r\n","import serverPath from \"./server\";\r\n\r\nexport async function getTenants() {\r\n  const fetchOptions = {\r\n    method: \"GET\",\r\n    credentials: \"include\",\r\n  };\r\n  return await fetch(`${serverPath}/tenant`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n\r\nexport async function getTenantForId(id) {\r\n  const fetchOptions = {\r\n    method: \"GET\",\r\n    credentials: \"include\",\r\n  };\r\n  return await fetch(`${serverPath}/tenant/${id}`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n\r\nexport async function newTenant(values) {\r\n  let formData = new FormData();\r\n  const { image_url, ...data } = values;\r\n  formData.append(\"file\", image_url);\r\n  formData.append(\"data\", JSON.stringify(data));\r\n\r\n  const fetchOptions = {\r\n    method: \"POST\",\r\n    credentials: \"include\",\r\n    body: formData,\r\n  };\r\n  return await fetch(`${serverPath}/auth/register`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n\r\nexport async function editTenant(user_id, tenant_id, values) {\r\n  let formData = new FormData();\r\n  formData.append(\"file\", values.image_url);\r\n  values.tenant_id = tenant_id;\r\n  formData.append(\"data\", JSON.stringify(values));\r\n\r\n  const fetchOptions = {\r\n    method: \"PATCH\",\r\n    credentials: \"include\",\r\n    body: formData,\r\n  };\r\n  return await fetch(`${serverPath}/user/edit/${user_id}`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n\r\nexport async function deleteTenant(id) {\r\n  const fetchOptions = {\r\n    method: \"Delete\",\r\n    credentials: \"include\",\r\n  };\r\n  return await fetch(`${serverPath}/tenant/delete/${id}`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n","import { useField } from \"formik\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\n\r\nexport default function FormikSelectField({\r\n  label,\r\n  formikKey,\r\n  itemArray,\r\n  itemValue,\r\n  itemLabel,\r\n  ...props\r\n}) {\r\n  const [field, meta] = useField(formikKey);\r\n\r\n  return (\r\n    <TextField\r\n      select\r\n      id={field.name}\r\n      name={field.name}\r\n      label={label}\r\n      fullWidth\r\n      variant=\"standard\"\r\n      helperText={meta.touched ? meta.error : \"\"}\r\n      error={meta.touched && Boolean(meta.error)}\r\n      value={field.value}\r\n      onChange={field.onChange}\r\n      {...props}\r\n    >\r\n      {itemArray.map((item) => (\r\n        <MenuItem value={itemValue(item)} key={itemValue(item)}>\r\n          {(itemValue, itemLabel(item))}\r\n        </MenuItem>\r\n      ))}\r\n    </TextField>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Button } from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  newTenant,\r\n  editTenant,\r\n  deleteTenant,\r\n} from \"../../helpers/APICalls/tenant\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getProperties } from \"../../helpers/APICalls/property\";\r\nimport FormikTextField from \"./FormikTextField\";\r\nimport FormikSelectField from \"./FormikSelectField\";\r\nimport FormikImage from \"./FormikImage\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { DefaultUserImage } from \"../../images/images\";\r\nimport { useSnackBar } from \"../../context/useSnackbarContext\";\r\nimport { submittedForm } from \"./formHelper\";\r\n\r\nexport default function UserForm({ current, handleCancel }) {\r\n  const history = useHistory();\r\n  const [propertyData, setPropertyData] = useState([]);\r\n  const { updateSnackBarMessage } = useSnackBar();\r\n  const [deleteSubmitting, setDeleteSubmitting] = useState(false);\r\n  useEffect(() => {\r\n    getProperties().then((res) => {\r\n      console.log(res);\r\n      setPropertyData(res);\r\n    });\r\n  }, []);\r\n  const accountTypes = [\r\n    { name: \"tenant\", label: \"Tenant\" },\r\n    { name: \"admin\", label: \"Admin\" },\r\n    { name: \"maintenance\", label: \"Maintenance\" },\r\n    { name: \"owner\", label: \"Owner\" },\r\n  ];\r\n  const initialValues = {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    image_url: \"\",\r\n    phone_number: \"\",\r\n    email: \"\",\r\n    account_type: \"\",\r\n    password: \"\",\r\n    property: \"\",\r\n    unit: \"\",\r\n  };\r\n\r\n  console.log(current);\r\n  if (current) {\r\n    initialValues.first_name = current.user.first_name;\r\n    initialValues.last_name = current.user.last_name;\r\n    initialValues.image_url = current.user.image_url;\r\n    initialValues.phone_number = current.user.phone_number;\r\n    initialValues.email = current.user.email;\r\n    initialValues.account_type = current.user.account_type;\r\n    // initialValues.password = current.user.password;\r\n    initialValues.property = current.property._id;\r\n    initialValues.unit = current.unit._id;\r\n  }\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    first_name: Yup.string()\r\n      .required(\"Property Name is required\")\r\n      .max(40, \"Property Name is too long\"),\r\n    last_name: Yup.string().required(\"last_name is required\"),\r\n    image_url: Yup.mixed(),\r\n    phone_number: Yup.string().required(\"phone_number is required\"),\r\n    email: Yup.string().email().required(\"email is required\"),\r\n    account_type: Yup.string().required(\"account_type is required\"),\r\n    password: current\r\n      ? Yup.string()\r\n      : Yup.string().required(\"password is required\"),\r\n    // property: Yup.string().required(\"property is required\"),\r\n    // unit: Yup.string().required(\"unit is required\"),\r\n    property: Yup.string(),\r\n    unit: Yup.string(),\r\n  });\r\n  function handleSubmit(values, { setSubmitting }) {\r\n    if (current) {\r\n      editTenant(current.user._id, current._id, values).then((data) => {\r\n        setSubmitting(true);\r\n        const onSuccess = () => history.go(0);\r\n        submittedForm(updateSnackBarMessage, setSubmitting, data, onSuccess);\r\n      });\r\n    } else {\r\n      newTenant(values).then((data) => {\r\n        setSubmitting(true);\r\n        if (data.error) {\r\n          console.error({ error: data.error.message });\r\n          setSubmitting(false);\r\n        } else if (data.success) {\r\n          setSubmitting(false);\r\n          history.push({\r\n            pathname: `/tenants/${data.success.tenant._id}`,\r\n          });\r\n        } else {\r\n          // should not get here from backend but this catch is for an unknown issue\r\n          console.error({ data });\r\n          setSubmitting(false);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleDelete() {\r\n    deleteTenant(current._id).then((data) => {\r\n      function onSuccess() {\r\n        history.push({\r\n          pathname: `/tenants`,\r\n        });\r\n      }\r\n      submittedForm(\r\n        updateSnackBarMessage,\r\n        setDeleteSubmitting,\r\n        data,\r\n        onSuccess\r\n      );\r\n    });\r\n  }\r\n  return (\r\n    <Grid item>\r\n      <Paper sx={{ p: 2 }}>\r\n        <Formik\r\n          enableReinitialize\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            handleChange,\r\n            values,\r\n            touched,\r\n            errors,\r\n            isSubmitting,\r\n          }) => {\r\n            return (\r\n              <form onSubmit={handleSubmit} noValidate>\r\n                <Typography component=\"h2\" variant=\"h6\" color=\"primary\">\r\n                  Tenant\r\n                </Typography>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12}>\r\n                    <FormikImage\r\n                      label=\"image\"\r\n                      formikKey=\"image_url\"\r\n                      defaultImage={DefaultUserImage}\r\n                      avatar\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                    <FormikSelectField\r\n                      label=\"Property\"\r\n                      formikKey=\"property\"\r\n                      itemArray={propertyData}\r\n                      itemValue={(item) => item._id}\r\n                      itemLabel={(item) => item.name}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <FormikSelectField\r\n                      disabled={values.property === \"\"}\r\n                      label={\r\n                        values.property === \"\"\r\n                          ? \"select property first\"\r\n                          : \"Unit\"\r\n                      }\r\n                      formikKey=\"unit\"\r\n                      itemArray={\r\n                        values.property && propertyData.length > 0\r\n                          ? propertyData.filter(\r\n                              (p) => p._id === values.property\r\n                            )[0].units\r\n                          : [\"\"]\r\n                      }\r\n                      itemValue={(item) => item._id}\r\n                      itemLabel={(item) => item.name}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                    <FormikTextField\r\n                      label=\"First Name\"\r\n                      formikKey=\"first_name\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <FormikTextField label=\"Last Name\" formikKey=\"last_name\" />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                    <FormikTextField\r\n                      label=\"Phone Number\"\r\n                      formikKey=\"phone_number\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <FormikTextField label=\"Email\" formikKey=\"email\" />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                    <FormikSelectField\r\n                      label=\"Account type\"\r\n                      formikKey=\"account_type\"\r\n                      itemArray={accountTypes}\r\n                      itemValue={(item) => item.name}\r\n                      itemLabel={(item) => item.label}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                    <FormikTextField label=\"Password\" formikKey=\"password\" />\r\n                  </Grid>\r\n\r\n                  <Grid item container spacing={1} justifyContent=\"flex-end\">\r\n                    <Grid item>\r\n                      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        {isSubmitting ? (\r\n                          <CircularProgress style={{ color: \"white\" }} />\r\n                        ) : current ? (\r\n                          \"Update\"\r\n                        ) : (\r\n                          \"Create\"\r\n                        )}\r\n                      </Button>\r\n                    </Grid>\r\n                    {current && (\r\n                      <>\r\n                        <Grid item>\r\n                          <Button onClick={handleDelete} variant=\"outlined\">\r\n                            Delete\r\n                          </Button>\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n                    {handleCancel && (\r\n                      <Grid item>\r\n                        <Button onClick={handleCancel} variant=\"outlined\">\r\n                          Cancel\r\n                        </Button>\r\n                      </Grid>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","import serverPath from \"./server\";\r\n\r\nexport async function getMaintenances() {\r\n  const fetchOptions = {\r\n    method: \"GET\",\r\n    credentials: \"include\",\r\n  };\r\n  return await fetch(`${serverPath}/maintenance`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n\r\nexport async function getMaintenanceForId(id) {\r\n  const fetchOptions = {\r\n    method: \"GET\",\r\n    credentials: \"include\",\r\n  };\r\n  return await fetch(`${serverPath}/maintenance/${id}`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n\r\nexport async function newMaintenance(values) {\r\n  let formData = new FormData();\r\n  const { media, ...data } = values;\r\n  media.forEach((f) => {\r\n    formData.append(\"files\", f);\r\n  });\r\n  formData.append(\"data\", JSON.stringify(data));\r\n  const fetchOptions = {\r\n    method: \"POST\",\r\n    credentials: \"include\",\r\n    body: formData,\r\n  };\r\n  return await fetch(`${serverPath}/maintenance/new`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n\r\nexport async function editMaintenance(id, values) {\r\n  let formData = new FormData();\r\n  const { media, ...data } = values;\r\n\r\n  let fileObjs = [];\r\n  let fileUrls = [];\r\n\r\n  media.forEach((f) => {\r\n    if (f instanceof File) {\r\n      fileObjs.push(f);\r\n      formData.append(\"files\", f);\r\n    } else {\r\n      fileUrls.push(f);\r\n    }\r\n  });\r\n  data.media = fileUrls;\r\n  console.log(\"media\", media);\r\n  console.log(\"fileObjs\", fileObjs);\r\n  console.log(\"fileUrls\", fileUrls);\r\n  formData.append(\"data\", JSON.stringify(data));\r\n  const fetchOptions = {\r\n    method: \"PATCH\",\r\n    credentials: \"include\",\r\n    body: formData,\r\n  };\r\n  return await fetch(`${serverPath}/maintenance/edit/${id}`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n\r\nexport async function deleteMaintenance(id) {\r\n  const fetchOptions = {\r\n    method: \"Delete\",\r\n    credentials: \"include\",\r\n  };\r\n  return await fetch(`${serverPath}/maintenance/delete/${id}`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport Input from \"@mui/material/Input\";\r\nimport { useField, FieldArray } from \"formik\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nexport default function FormikMultiImage({ label, formikKey, ...props }) {\r\n  const [field, meta, helpers] = useField(formikKey);\r\n\r\n  return (\r\n    <Grid>\r\n      <InputLabel\r\n        sx={{ mb: 1 }}\r\n        htmlFor={field.name}\r\n        error={meta.touched && Boolean(meta.error)}\r\n      >\r\n        {label}\r\n      </InputLabel>\r\n      <Grid container spacing={2}>\r\n        <FieldArray\r\n          id={field.name}\r\n          name={field.name}\r\n          render={(arrayHelpers) => (\r\n            <React.Fragment>\r\n              {field.value.map((item, index) => (\r\n                <Grid item key={index} xs={12} sm={6} md={4} lg={3}>\r\n                  <Card>\r\n                    <CardMedia\r\n                      component=\"img\"\r\n                      height=\"200\"\r\n                      image={\r\n                        item instanceof File ? URL.createObjectURL(item) : item\r\n                      }\r\n                      alt={label}\r\n                    />\r\n\r\n                    <CardActions>\r\n                      <Button\r\n                        size=\"small\"\r\n                        onClick={() => arrayHelpers.remove(index)}\r\n                      >\r\n                        remove\r\n                      </Button>\r\n                    </CardActions>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </React.Fragment>\r\n          )}\r\n        />\r\n        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n          <Card sx={{ height: \"100%\", minHeight: 200 }}>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n              sx={{ height: \"100%\" }}\r\n            >\r\n              <CardActions>\r\n                <Button component=\"label\">\r\n                  Upload images\r\n                  <Input\r\n                    sx={{ display: \"none\" }}\r\n                    type=\"file\"\r\n                    inputProps={{\r\n                      accept: \"image/*\",\r\n                      multiple: true,\r\n                    }}\r\n                    label=\"mew\"\r\n                    id={field.name}\r\n                    onChange={(e) =>\r\n                      helpers.setValue([...field.value, ...e.target.files])\r\n                    }\r\n                  />\r\n                </Button>\r\n              </CardActions>\r\n            </Grid>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <TextField\r\n        fullWidth\r\n        variant=\"standard\"\r\n        helperText={meta.touched ? meta.error : \"\"}\r\n        error={meta.touched && Boolean(meta.error)}\r\n        value={field.value}\r\n        disabled\r\n        sx={{\r\n          \".MuiInput-root input\": {\r\n            display: \"none\",\r\n          },\r\n          \".MuiInput-root::before\": {\r\n            borderBottom: \"none\",\r\n          },\r\n          \".MuiInput-root::after\": {\r\n            borderBottom: \"none\",\r\n          },\r\n        }}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Button } from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  newMaintenance,\r\n  editMaintenance,\r\n  deleteMaintenance,\r\n} from \"../../helpers/APICalls/maintenance\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FormikTextField from \"./FormikTextField\";\r\nimport FormikSelectField from \"./FormikSelectField\";\r\nimport { getTenants } from \"../../helpers/APICalls/tenant\";\r\nimport FormikMultiImage from \"./FormikMultiImage\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { useSnackBar } from \"../../context/useSnackbarContext\";\r\nimport { submittedForm } from \"./formHelper\";\r\nimport { useAuth } from \"../../context/useAuthContext\";\r\nimport acct from \"../../helpers/accoutTypes\";\r\nexport default function MaintenanceForm({\r\n  currentMaintenance,\r\n  handleCancel,\r\n  tenantList,\r\n}) {\r\n  const history = useHistory();\r\n  const { loggedInUser } = useAuth();\r\n  const { updateSnackBarMessage } = useSnackBar();\r\n  const [deleteSubmitting, setDeleteSubmitting] = useState(false);\r\n  const isTenant = loggedInUser.account_type === acct.tenant;\r\n\r\n  const initialValues = {\r\n    tenant: \"\",\r\n    title: \"\",\r\n    body: \"\",\r\n    status: \"\",\r\n    media: [],\r\n    location: \"\",\r\n  };\r\n\r\n  if (currentMaintenance) {\r\n    initialValues.tenant = currentMaintenance.tenant._id;\r\n    initialValues.title = currentMaintenance.title;\r\n    initialValues.body = currentMaintenance.body;\r\n    initialValues.status = currentMaintenance.status;\r\n    initialValues.location = currentMaintenance.location;\r\n    initialValues.media = currentMaintenance.media;\r\n  }\r\n  if (isTenant) {\r\n    initialValues.tenant = loggedInUser.tenant._id;\r\n  }\r\n  const [tenantData, setTenantData] = useState([]);\r\n  useEffect(() => {\r\n    if (isTenant) {\r\n      setTenantData([loggedInUser.tenant]);\r\n    } else if (tenantList) {\r\n      setTenantData(tenantList);\r\n    } else {\r\n      getTenants().then((res) => {\r\n        setTenantData(res);\r\n      });\r\n    }\r\n  }, [isTenant, loggedInUser, tenantList]);\r\n  const statusTypes = [\r\n    { name: \"open\", label: \"open\" },\r\n    { name: \"close\", label: \"close\" },\r\n    { name: \"pending\", label: \"pending\" },\r\n  ];\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    tenant: Yup.string().required(\"tenant is required\"),\r\n    title: Yup.string().required(\"title is required\"),\r\n    body: Yup.string().required(\"body is required\"),\r\n    status: Yup.string().required(\"state is required\"),\r\n    location: Yup.string().required(\"location is required\"),\r\n    media: Yup.array().of(Yup.mixed()).min(1, \"at least one image is required\"),\r\n  });\r\n  function handleSubmit(values, { setSubmitting }) {\r\n    if (currentMaintenance) {\r\n      editMaintenance(currentMaintenance._id, values).then((data) => {\r\n        const onSuccess = () => history.go(0);\r\n        submittedForm(updateSnackBarMessage, setSubmitting, data, onSuccess);\r\n      });\r\n    } else {\r\n      values.property = tenantData.filter(\r\n        (t) => t._id === values.tenant\r\n      )[0].property;\r\n      newMaintenance(values).then((data) => {\r\n        const onSuccess = () => {\r\n          history.push(`/maintenances/${data.success.maintenance._id}`);\r\n        };\r\n        submittedForm(updateSnackBarMessage, setSubmitting, data, onSuccess);\r\n      });\r\n    }\r\n  }\r\n  function handleDelete() {\r\n    deleteMaintenance(currentMaintenance).then((data) => {\r\n      function onSuccess(data) {\r\n        history.push({\r\n          pathname: `/properties`,\r\n          state: { properties: data.success.propertyList },\r\n        });\r\n      }\r\n      submittedForm(\r\n        updateSnackBarMessage,\r\n        setDeleteSubmitting,\r\n        data,\r\n        onSuccess\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Paper sx={{ p: 2 }}>\r\n        <Formik\r\n          enableReinitialize\r\n          validateOnChange\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            handleChange,\r\n            values,\r\n            touched,\r\n            errors,\r\n            isSubmitting,\r\n          }) => (\r\n            <form onSubmit={handleSubmit} noValidate>\r\n              <Typography component=\"h2\" variant=\"h6\" color=\"primary\">\r\n                Maintenance\r\n              </Typography>\r\n\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                  <FormikSelectField\r\n                    label=\"Status\"\r\n                    formikKey=\"status\"\r\n                    itemArray={statusTypes}\r\n                    itemValue={(item) => item.name}\r\n                    itemLabel={(item) => item.label}\r\n                  />\r\n                </Grid>\r\n                {!currentMaintenance && (\r\n                  <>\r\n                    {!isTenant && (\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FormikSelectField\r\n                          label=\"Tenant\"\r\n                          formikKey=\"tenant\"\r\n                          itemArray={tenantData}\r\n                          itemValue={(item) => item._id}\r\n                          itemLabel={(item) =>\r\n                            `${item.user.first_name} ${item.user.last_name}`\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                    )}\r\n                    <Grid item xs={12} sm={6}>\r\n                      <FormikSelectField\r\n                        disabled={values.tenant === \"\"}\r\n                        label={\r\n                          values.tenant === \"\"\r\n                            ? \"select tenant first\"\r\n                            : \"location\"\r\n                        }\r\n                        formikKey=\"location\"\r\n                        itemArray={[\r\n                          { _id: \"common\", name: \"common\" },\r\n                          values.tenant &&\r\n                            tenantData.length > 0 &&\r\n                            tenantData.filter((t) => t._id === values.tenant)[0]\r\n                              .unit,\r\n                        ]}\r\n                        itemValue={(item) => item._id}\r\n                        itemLabel={(item) => item.name}\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n                <Grid item xs={12}>\r\n                  <FormikTextField\r\n                    label=\"Title (short description)\"\r\n                    formikKey=\"title\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormikTextField\r\n                    label=\"Body( detailed description)\"\r\n                    formikKey=\"body\"\r\n                    multiline\r\n                    rows={4}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormikMultiImage label=\"Images\" formikKey=\"media\" />\r\n                </Grid>\r\n\r\n                <Grid container item spacing={1} justifyContent=\"flex-end\">\r\n                  <Grid item>\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                      {isSubmitting ? (\r\n                        <CircularProgress style={{ color: \"white\" }} />\r\n                      ) : currentMaintenance ? (\r\n                        \"Update\"\r\n                      ) : (\r\n                        \"Create\"\r\n                      )}\r\n                    </Button>\r\n                  </Grid>\r\n\r\n                  {currentMaintenance && (\r\n                    <Grid item>\r\n                      <Button onClick={handleDelete} variant=\"outlined\">\r\n                        Delete\r\n                      </Button>\r\n                    </Grid>\r\n                  )}\r\n                  {handleCancel && (\r\n                    <Grid item>\r\n                      <Button onClick={handleCancel} variant=\"outlined\">\r\n                        Cancel\r\n                      </Button>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport Header from \"./PropertyHeader\";\r\nimport { getPropertyForId } from \"../../helpers/APICalls/property\";\r\nimport TabTableView from \"../../components/TabTableView\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@mui/material/Link\";\r\nimport moment from \"moment\";\r\nimport TenantAvatarCell from \"../../components/TenantAvatarCell\";\r\nimport currencyformatter from \"../../helpers/currencyFormatter\";\r\nimport LoadingView from \"../../components/LoadingView\";\r\nimport dateFormatter from \"./../../helpers/dateFormatter\";\r\nimport UserForm from \"../../components/forms/UserForm\";\r\nimport MaintenanceForm from \"./../../components/forms/MaintenanceForm\";\r\nimport { useAuth } from \"../../context/useAuthContext\";\r\nimport PropertyForm from \"../../components/forms/PropertyForm\";\r\n\r\nexport default function PropertyView({ propertyId }) {\r\n  const { loggedInUser } = useAuth();\r\n  const isAdd = propertyId === \"add\";\r\n\r\n  const [tenantMap, setTenantMap] = useState();\r\n  const [tenantData, setTenantData] = useState([]);\r\n  const [maintenanceData, setMaintenanceData] = useState([]);\r\n  const [invoiceData, setInvoiceData] = useState([]);\r\n  const [leaseData, setleaseData] = useState([]);\r\n  const [propertyData, setPropertyData] = useState();\r\n\r\n  useEffect(() => {\r\n    setPropertyData(null);\r\n    if (!isAdd && propertyId) {\r\n      getPropertyForId(propertyId).then((res) => {\r\n        setPropertyData(res);\r\n        if (!res.message) {\r\n          let tenants = {};\r\n          res.tenants.forEach((t) => {\r\n            tenants[t._id] = t;\r\n          });\r\n          setTenantMap(tenants);\r\n          setTenantData(res.tenants);\r\n          setMaintenanceData(res.maintenances);\r\n          setInvoiceData(res.invoices);\r\n          setleaseData(res.leases);\r\n        }\r\n      });\r\n    }\r\n  }, [propertyId, isAdd]);\r\n\r\n  const tenantColumns = [\r\n    {\r\n      label: \"Name\",\r\n      content: (tenant) => <TenantAvatarCell tenant={tenant} />,\r\n      hideLabel: true,\r\n    },\r\n    {\r\n      label: \"Unit\",\r\n      content: (tenant) => <span>{tenant.unit.name}</span>,\r\n    },\r\n    {\r\n      label: \"Phone\",\r\n      content: (tenant) => <span>{tenant.user.phone_number}</span>,\r\n    },\r\n    {\r\n      label: \"Email\",\r\n      content: (tenant) => <span>{tenant.user.email}</span>,\r\n    },\r\n    {\r\n      label: \"Overdue\",\r\n      content: (tenant) => <span>{tenant.isLate ? \"late\" : \"paid\"}</span>,\r\n    },\r\n  ];\r\n\r\n  const unpaidTenantsData = tenantData.filter((tenant) => tenant.isLate);\r\n  const tentantTabs = [\r\n    {\r\n      label: `${tenantData.length} tenants`,\r\n      content: tenantData,\r\n    },\r\n    {\r\n      label: `${unpaidTenantsData.length} unpaid`,\r\n      content: unpaidTenantsData,\r\n    },\r\n  ];\r\n  const tenantSortParams = [\r\n    { label: \"name\", terms: [(item) => item.user.first_name] },\r\n    { label: \"unit\", terms: [(item) => item.unit.name] },\r\n  ];\r\n  const maintenanceColumns = [\r\n    {\r\n      label: \"Date\",\r\n      content: (maintenance) => <span>{dateFormatter(maintenance.date)}</span>,\r\n    },\r\n    {\r\n      label: \"Issue\",\r\n      content: (maintenance) => <span>{maintenance.title}</span>,\r\n    },\r\n    {\r\n      label: \"Location\",\r\n      content: (maintenance) => (\r\n        <span>\r\n          {maintenance.location === \"common\"\r\n            ? \"common\"\r\n            : tenantMap[maintenance.tenant] &&\r\n              tenantMap[maintenance.tenant].unit.name}\r\n        </span>\r\n      ),\r\n    },\r\n\r\n    {\r\n      label: \"Name\",\r\n      content: (maintenance) => (\r\n        <TenantAvatarCell tenant={tenantMap[maintenance.tenant]} />\r\n      ),\r\n      hideLabel: true,\r\n    },\r\n\r\n    {\r\n      label: \"Status\",\r\n      content: (maintenance) => <span>{maintenance.status}</span>,\r\n    },\r\n\r\n    {\r\n      label: \"\",\r\n      content: (maintenance) => (\r\n        <Link\r\n          underline=\"none\"\r\n          component={RouterLink}\r\n          to={`/maintenances/${maintenance._id}`}\r\n        >\r\n          <span>view</span>\r\n        </Link>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const unCompleteMaintanceData = maintenanceData.filter(\r\n    (maintenance) => maintenance.status !== \"close\"\r\n  );\r\n  const maintenanceTabs = [\r\n    {\r\n      label: `${unCompleteMaintanceData.length} open`,\r\n      content: unCompleteMaintanceData,\r\n    },\r\n    {\r\n      label: `${maintenanceData.length} total`,\r\n      content: maintenanceData,\r\n    },\r\n  ];\r\n\r\n  const maintenanceSortParams = [\r\n    { label: \"date\", terms: [(item) => dateFormatter(item.date)] },\r\n    {\r\n      label: \"name\",\r\n      terms: [(item) => tenantMap[item.tenant].user.first_name],\r\n    },\r\n    { label: \"unit\", terms: [(item) => tenantMap[item.tenant].unit.name] },\r\n  ];\r\n\r\n  const invoiceColumns = [\r\n    {\r\n      label: \"Due Date\",\r\n      content: (invoice) => <span>{dateFormatter(invoice.due_date)}</span>,\r\n    },\r\n\r\n    {\r\n      label: \"Name\",\r\n      content: (invoice) => (\r\n        <TenantAvatarCell tenant={tenantMap[invoice.tenant]} />\r\n      ),\r\n      hideLabel: true,\r\n    },\r\n    {\r\n      label: \"Amount\",\r\n      content: (invoice) => (\r\n        <span>{currencyformatter.format(invoice.amount)}</span>\r\n      ),\r\n    },\r\n    {\r\n      label: \"Paid Date\",\r\n      content: (invoice) => (\r\n        <span>{`${dateFormatter(invoice.paid_date)} ${\r\n          invoice.is_late ? \"(late)\" : \"\"\r\n        }`}</span>\r\n      ),\r\n    },\r\n    {\r\n      label: \"\",\r\n      content: (invoice) => (\r\n        <Link\r\n          underline=\"none\"\r\n          component={RouterLink}\r\n          to={`/invoices/${invoice._id}`}\r\n        >\r\n          <span>view</span>\r\n        </Link>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const currentInvoiceData = invoiceData.filter((invoice) => {\r\n    let isAfter = moment(invoice.due_date).isAfter(moment([]));\r\n    return !invoice.paid_date || isAfter;\r\n  });\r\n  const invoiceTabs = [\r\n    {\r\n      label: `${currentInvoiceData.length} current`,\r\n      content: currentInvoiceData,\r\n    },\r\n    {\r\n      label: `${invoiceData.length} total`,\r\n      content: invoiceData,\r\n    },\r\n  ];\r\n\r\n  const invoiceSortParams = [\r\n    { label: \"date\", terms: [(item) => dateFormatter(item.paid_date)] },\r\n    {\r\n      label: \"name\",\r\n      terms: [(item) => tenantMap[item.tenant].user.first_name],\r\n    },\r\n  ];\r\n\r\n  const leaseColumns = [\r\n    {\r\n      label: \"Name\",\r\n      content: (lease) => <TenantAvatarCell tenant={tenantMap[lease.tenant]} />,\r\n      hideLabel: true,\r\n    },\r\n    {\r\n      label: \"monthly_rent\",\r\n      content: (lease) => (\r\n        <span>{currencyformatter.format(lease.monthly_rent)}</span>\r\n      ),\r\n    },\r\n    {\r\n      label: \"start_date\",\r\n      content: (lease) => <span>{dateFormatter(lease.start_date)}</span>,\r\n    },\r\n    {\r\n      label: \"end_date\",\r\n      content: (lease) => <span>{dateFormatter(lease.end_date)}</span>,\r\n    },\r\n    {\r\n      label: \"\",\r\n      content: (lease) => (\r\n        <Link\r\n          underline=\"none\"\r\n          component={RouterLink}\r\n          to={`/leases/${lease._id}`}\r\n        >\r\n          <span>view</span>\r\n        </Link>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const currentLeaseData = leaseData.filter((lease) => {\r\n    return moment(lease.end_date).isAfter(moment([]));\r\n  });\r\n  const leaseTabs = [\r\n    {\r\n      label: `${currentLeaseData.length} current`,\r\n      content: currentLeaseData,\r\n    },\r\n    {\r\n      label: `${leaseData.length} total`,\r\n      content: leaseData,\r\n    },\r\n  ];\r\n\r\n  const leaseSortParams = [\r\n    { label: \"date\", terms: [(item) => dateFormatter(item.end_date)] },\r\n    {\r\n      label: \"name\",\r\n      terms: [(item) => tenantMap[item.tenant].user.first_name],\r\n    },\r\n  ];\r\n\r\n  if (isAdd) {\r\n    return (\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <PropertyForm />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <LoadingView\r\n      data={propertyData}\r\n      loadingState={(data) => !data}\r\n      notFoundState={(data) => data.message}\r\n    >\r\n      {propertyData && (\r\n        <Grid container spacing={3}>\r\n          <Header currentProperty={propertyData} invoiceData={invoiceData} />\r\n\r\n          <TabTableView\r\n            label={\"Tenants\"}\r\n            tabs={tentantTabs}\r\n            columns={tenantColumns}\r\n            sortParams={tenantSortParams}\r\n            toggleLabel=\"add\"\r\n            toggleContent={<UserForm />}\r\n          ></TabTableView>\r\n          <TabTableView\r\n            label={\"Maintenances\"}\r\n            tabs={maintenanceTabs}\r\n            columns={maintenanceColumns}\r\n            sortParams={maintenanceSortParams}\r\n            toggleLabel=\"add\"\r\n            toggleContent={<MaintenanceForm tenantList={tenantData} />}\r\n          ></TabTableView>\r\n          <TabTableView\r\n            label={\"Invoices\"}\r\n            tabs={invoiceTabs}\r\n            columns={invoiceColumns}\r\n            sortParams={invoiceSortParams}\r\n          ></TabTableView>\r\n          <TabTableView\r\n            label={\"Leases\"}\r\n            tabs={leaseTabs}\r\n            columns={leaseColumns}\r\n            sortParams={leaseSortParams}\r\n          ></TabTableView>\r\n        </Grid>\r\n      )}\r\n    </LoadingView>\r\n  );\r\n}\r\n","import { Grid } from \"@mui/material\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nexport default function PgSideAndView({ side, view }) {\r\n  return (\r\n    <Container sx={{ mt: 4, mb: 4 }}>\r\n      <Grid\r\n        container\r\n        sx={{ flexDirection: { xs: \"column\", md: \"row\" } }}\r\n        spacing={3}\r\n      >\r\n        <Grid item xs={12} md={3}>\r\n          {side}\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={9}>\r\n          <Paper\r\n            sx={{\r\n              p: 2,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            {view}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport { NavLink as RouterLink } from \"react-router-dom\";\r\nimport { Button } from \"@mui/material\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { theme } from \"./../themes/theme\";\r\nimport { alpha } from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nconst linkStyle = {\r\n  \"&.selected\": {\r\n    color: theme.palette.primary.main,\r\n  },\r\n};\r\n\r\nfunction Panel({\r\n  handleChange,\r\n  selectedId,\r\n  data,\r\n  path,\r\n  itemContent,\r\n  onSort,\r\n  onSearch,\r\n  onClear,\r\n  sortParams,\r\n  selectedSort,\r\n  isAdd,\r\n}) {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const handleSearch = (e) => {\r\n    const value = e.target.value;\r\n    setSearchTerm(value);\r\n    if (value) onSearch(value);\r\n    else onClear();\r\n  };\r\n\r\n  const handleClear = (e) => {\r\n    setSearchTerm(\"\");\r\n    onClear();\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <TextField\r\n        label=\"search\"\r\n        sx={{ width: \"100%\" }}\r\n        onChange={(e) => handleSearch(e)}\r\n        value={searchTerm}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={(e) => handleClear(e)}\r\n                edge=\"end\"\r\n              >\r\n                <ClearIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <Grid container justifyContent=\"flex-end\" sx={{ mt: 2 }}>\r\n        {sortParams.map((param) => (\r\n          <Button\r\n            key={param.label}\r\n            onClick={() => onSort(param)}\r\n            // disabled={selectedSort === param.label}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            sx={\r\n              selectedSort === param.label\r\n                ? {\r\n                    mr: 0.2,\r\n                    backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n                  }\r\n                : { mr: 0.2 }\r\n            }\r\n          >\r\n            {param.label}\r\n          </Button>\r\n        ))}\r\n      </Grid>\r\n\r\n      <List>\r\n        {isAdd && (\r\n          <ListItemButton\r\n            alignItems=\"center\"\r\n            onClick={handleChange(\"panel1\")}\r\n            component={RouterLink}\r\n            to={`/${path}/add`}\r\n            activeClassName=\"selected\"\r\n            sx={linkStyle}\r\n            selected={selectedId === \"add\"}\r\n          >\r\n            <AddIcon />\r\n            add\r\n          </ListItemButton>\r\n        )}\r\n        {data.length > 0 &&\r\n          data.map((item) => (\r\n            <React.Fragment key={item._id}>\r\n              <ListItemButton\r\n                alignItems=\"center\"\r\n                onClick={handleChange(\"panel1\")}\r\n                component={RouterLink}\r\n                to={`/${path}/${item._id}`}\r\n                activeClassName=\"selected\"\r\n                sx={linkStyle}\r\n                selected={selectedId === item._id.toString()}\r\n              >\r\n                {itemContent(item)}\r\n              </ListItemButton>\r\n              <Divider component=\"li\" />\r\n            </React.Fragment>\r\n          ))}\r\n      </List>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default function SideNav({\r\n  selectedId,\r\n  data = [],\r\n  path,\r\n  itemContent,\r\n  sortParams,\r\n  searchParms,\r\n  collapsedText,\r\n  isAdd,\r\n}) {\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [sortedData, setSortedData] = useState([]);\r\n  const [sortTerm, setSortTerm] = useState();\r\n  const [searchTerm, setSearchTerm] = useState();\r\n  const [selectedSort, setSelectedSort] = useState();\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  let currentSelection = data.filter((p) => p._id.toString() === selectedId)[0];\r\n  useEffect(() => {\r\n    setSelectedSort(sortParams[0].label);\r\n    setSortTerm(sortParams[0].terms);\r\n  }, [data, sortParams]);\r\n\r\n  useEffect(() => {\r\n    let filtered = [...data];\r\n    if (searchTerm) {\r\n      filtered = data.filter((item) =>\r\n        searchParms(item).toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n    let sorted = filtered;\r\n    if (sortTerm) {\r\n      const [sortTerm1, sortTerm2] = sortTerm;\r\n\r\n      sorted = filtered.sort((a, b) => {\r\n        const propA = sortTerm1(a).toString().toLowerCase();\r\n        const propB = sortTerm1(b).toString().toLowerCase();\r\n\r\n        if (propA === propB) {\r\n          if (sortTerm2) {\r\n            const prop2A = sortTerm2(a).toString().toLowerCase();\r\n            const prop2B = sortTerm2(b).toString().toLowerCase();\r\n            if (prop2A === prop2B) return 0;\r\n            return prop2A > prop2B ? 1 : -1;\r\n          }\r\n          return 0;\r\n        }\r\n        return propA > propB ? 1 : -1;\r\n      });\r\n    }\r\n    setSortedData(sorted);\r\n  }, [data, sortTerm, searchTerm, searchParms]);\r\n\r\n  const handleSort = (param) => {\r\n    setSortTerm(param.terms);\r\n    setSelectedSort(param.label);\r\n  };\r\n  const handleSearch = (term) => {\r\n    setSearchTerm(term);\r\n  };\r\n  const handleClearSearch = () => {\r\n    setSearchTerm(\"\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box sx={{ display: { xs: \"block\", md: \"none\" } }}>\r\n        <Accordion\r\n          expanded={expanded === \"panel1\"}\r\n          onChange={handleChange(\"panel1\")}\r\n        >\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1bh-content\"\r\n            id=\"panel1bh-header\"\r\n          >\r\n            <Typography sx={{ width: \"66%\", flexShrink: 0 }}>\r\n              {(currentSelection && collapsedText.primary(currentSelection)) ||\r\n                \"add\"}\r\n            </Typography>\r\n            <Typography sx={{ color: \"text.secondary\" }}>\r\n              {currentSelection && collapsedText.secondary(currentSelection)}\r\n            </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <Panel\r\n              handleChange={handleChange}\r\n              selectedId={selectedId}\r\n              data={sortedData}\r\n              path={path}\r\n              itemContent={itemContent}\r\n              onSort={handleSort}\r\n              onSearch={handleSearch}\r\n              onClear={handleClearSearch}\r\n              sortParams={sortParams}\r\n              selectedSort={selectedSort}\r\n              isAdd={isAdd}\r\n            />\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </Box>\r\n      <Box sx={{ display: { xs: \"none\", md: \"block\" } }}>\r\n        <Panel\r\n          handleChange={() => {}}\r\n          selectedId={selectedId}\r\n          data={sortedData}\r\n          path={path}\r\n          itemContent={itemContent}\r\n          onSort={handleSort}\r\n          onSearch={handleSearch}\r\n          onClear={handleClearSearch}\r\n          sortParams={sortParams}\r\n          selectedSort={selectedSort}\r\n          isAdd={isAdd}\r\n        />\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport SideNav from \"../../components/SideNav\";\r\nimport { DefaultPropertyImage } from \"../../images/images\";\r\n\r\nexport default function PropertiesSideNav({ selectedId, data }) {\r\n  const itemContent = (property) => (\r\n    <React.Fragment>\r\n      <ListItemIcon sx={{ paddingRight: \"2ch\" }}>\r\n        <img\r\n          alt={property.name}\r\n          src={property.image_url || DefaultPropertyImage}\r\n          style={{ width: \"100px\", height: \"60px\", objectFit: \"cover\" }}\r\n          loading=\"lazy\"\r\n        />\r\n      </ListItemIcon>\r\n\r\n      <ListItemText\r\n        primary={property.name}\r\n        secondary={\r\n          <React.Fragment>\r\n            <Typography\r\n              sx={{ display: \"block\" }}\r\n              component=\"span\"\r\n              variant=\"body2\"\r\n              color=\"text.primary\"\r\n            >\r\n              Units:{property.units.length}\r\n            </Typography>\r\n            <Typography\r\n              sx={{ display: \"block\" }}\r\n              component=\"span\"\r\n              variant=\"body2\"\r\n              color=\"text.primary\"\r\n            >\r\n              Availability:\r\n              {property.units.filter((p) => !p.tenants.length > 0).length}\r\n            </Typography>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </React.Fragment>\r\n  );\r\n  const sortParams = [\r\n    { label: \"name\", terms: [(item) => item.name] },\r\n    {\r\n      label: \"units\",\r\n      terms: [(item) => item.units],\r\n    },\r\n  ];\r\n  const searchParms = (item) => item.name;\r\n  const collapsedText = {\r\n    primary: (item) => item.name,\r\n    secondary: (item) => `${item.units.length} units`,\r\n  };\r\n\r\n  return (\r\n    <SideNav\r\n      selectedId={selectedId}\r\n      data={data}\r\n      path={\"properties\"}\r\n      itemContent={itemContent}\r\n      sortParams={sortParams}\r\n      searchParms={searchParms}\r\n      collapsedText={collapsedText}\r\n      isAdd={true}\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\r\nimport { getProperties } from \"../../helpers/APICalls/property\";\r\nimport PropertyView from \"./PropertyView\";\r\nimport PgSideAndView from \"../../components/PgSideAndView\";\r\nimport PropertiesSideNav from \"./PropertiesSideNav\";\r\n\r\nexport default function Properties() {\r\n  const { id } = useParams();\r\n  const [currentPropertyId, setCurrentPropertyId] = useState();\r\n  const [propertiesData, setPropertiesData] = useState([]);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (location.state) {\r\n      setPropertiesData(location.state.properties);\r\n    } else {\r\n      getProperties().then((res) => {\r\n        setPropertiesData(res);\r\n      });\r\n    }\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    if (!id && propertiesData.length > 0) {\r\n      setCurrentPropertyId(propertiesData[0]._id);\r\n      history.replace(`/properties/${propertiesData[0]._id}`);\r\n    } else if (id && propertiesData.length > 0) {\r\n      setCurrentPropertyId(id);\r\n    }\r\n  }, [history, propertiesData, setCurrentPropertyId, id]);\r\n\r\n  return (\r\n    <PgSideAndView\r\n      side={<PropertiesSideNav selectedId={id} data={propertiesData} />}\r\n      view={<PropertyView propertyId={currentPropertyId} />}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Button } from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport FormikTextField from \"./FormikTextField\";\r\nimport FormikImage from \"./FormikImage\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { DefaultUserImage } from \"../../images/images\";\r\n\r\nexport default function UserFormBase({\r\n  label,\r\n  current,\r\n  handleSubmit,\r\n  handleDelete,\r\n  handleCancel,\r\n  deleteSubmitting,\r\n  child,\r\n  childNamespace,\r\n  childValidationSchema,\r\n  childInitialValues,\r\n}) {\r\n  const initialValues = {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    image_url: \"\",\r\n    phone_number: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    ...childInitialValues,\r\n  };\r\n  if (current) {\r\n    initialValues.first_name = current.first_name;\r\n    initialValues.last_name = current.last_name;\r\n    initialValues.image_url = current.image_url;\r\n    initialValues.phone_number = current.phone_number;\r\n    initialValues.email = current.email;\r\n  }\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    first_name: Yup.string()\r\n      .required(\"Property Name is required\")\r\n      .max(40, \"Property Name is too long\"),\r\n    last_name: Yup.string().required(\"last_name is required\"),\r\n    image_url: Yup.mixed(),\r\n    phone_number: Yup.string().required(\"phone_number is required\"),\r\n    email: Yup.string().email().required(\"email is required\"),\r\n    password: current\r\n      ? Yup.string()\r\n      : Yup.string().required(\"password is required\"),\r\n    ...childValidationSchema,\r\n  });\r\n\r\n  return (\r\n    <Grid item>\r\n      <Paper sx={{ p: 2 }}>\r\n        <Formik\r\n          enableReinitialize\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            handleChange,\r\n            values,\r\n            touched,\r\n            errors,\r\n            isSubmitting,\r\n          }) => {\r\n            return (\r\n              <form onSubmit={handleSubmit} noValidate>\r\n                <Typography component=\"h2\" variant=\"h6\" color=\"primary\">\r\n                  {label}\r\n                </Typography>\r\n                <Grid container spacing={3}>\r\n                  {child(values, childNamespace)}\r\n                  <Grid item xs={12}>\r\n                    <FormikImage\r\n                      label=\"image\"\r\n                      formikKey=\"image_url\"\r\n                      defaultImage={DefaultUserImage}\r\n                      avatar\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                    <FormikTextField\r\n                      label=\"First Name\"\r\n                      formikKey=\"first_name\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <FormikTextField label=\"Last Name\" formikKey=\"last_name\" />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                    <FormikTextField\r\n                      label=\"Phone Number\"\r\n                      formikKey=\"phone_number\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <FormikTextField label=\"Email\" formikKey=\"email\" />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                    <FormikTextField label=\"Password\" formikKey=\"password\" />\r\n                  </Grid>\r\n\r\n                  <Grid item container spacing={1} justifyContent=\"flex-end\">\r\n                    <Grid item>\r\n                      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        {isSubmitting ? (\r\n                          <CircularProgress style={{ color: \"white\" }} />\r\n                        ) : current ? (\r\n                          \"Update\"\r\n                        ) : (\r\n                          \"Create\"\r\n                        )}\r\n                      </Button>\r\n                    </Grid>\r\n                    {current && (\r\n                      <>\r\n                        <Grid item>\r\n                          <Button onClick={handleDelete} variant=\"outlined\">\r\n                            {deleteSubmitting ? (\r\n                              <CircularProgress style={{ color: \"white\" }} />\r\n                            ) : (\r\n                              \"Delete\"\r\n                            )}\r\n                          </Button>\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n                    {handleCancel && (\r\n                      <Grid item>\r\n                        <Button onClick={handleCancel} variant=\"outlined\">\r\n                          Cancel\r\n                        </Button>\r\n                      </Grid>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  newTenant,\r\n  editTenant,\r\n  deleteTenant,\r\n} from \"../../helpers/APICalls/tenant\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSnackBar } from \"../../context/useSnackbarContext\";\r\nimport { submittedForm } from \"./formHelper\";\r\nimport UserFormBase from \"./UserFormBase\";\r\nimport FormikSelectField from \"./FormikSelectField\";\r\nimport { getProperties } from \"../../helpers/APICalls/property\";\r\n\r\nexport default function UserFormTenant({ current, handleCancel }) {\r\n  const history = useHistory();\r\n  const { updateSnackBarMessage } = useSnackBar();\r\n  const [deleteSubmitting, setDeleteSubmitting] = useState(false);\r\n  const [propertyData, setPropertyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProperties().then((res) => {\r\n      setPropertyData(res);\r\n    });\r\n  }, []);\r\n\r\n  const initialValues = {\r\n    account_type: \"tenant\",\r\n    property: \"\",\r\n    unit: \"\",\r\n  };\r\n\r\n  if (current) {\r\n    initialValues.property = current.property._id;\r\n    initialValues.unit = current.unit._id;\r\n  }\r\n\r\n  const validationSchema = {\r\n    property: Yup.string().required(\"property is required\"),\r\n    unit: Yup.string().required(\"unit is required\"),\r\n  };\r\n\r\n  function handleSubmit(values, { setSubmitting }) {\r\n    if (current) {\r\n      editTenant(current.user._id, current._id, values).then((data) => {\r\n        setSubmitting(true);\r\n        const onSuccess = () => history.go(0);\r\n        submittedForm(updateSnackBarMessage, setSubmitting, data, onSuccess);\r\n      });\r\n    } else {\r\n      newTenant(values).then((data) => {\r\n        const onSuccess = () => {\r\n          history.push(`/tenants/${data.success.tenant._id}`);\r\n        };\r\n        submittedForm(updateSnackBarMessage, setSubmitting, data, onSuccess);\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleDelete() {\r\n    deleteTenant(current._id).then((data) => {\r\n      function onSuccess() {\r\n        history.push({\r\n          pathname: `/tenants`,\r\n        });\r\n      }\r\n      submittedForm(\r\n        updateSnackBarMessage,\r\n        setDeleteSubmitting,\r\n        data,\r\n        onSuccess\r\n      );\r\n    });\r\n  }\r\n\r\n  const child = (values, namespace) => (\r\n    <>\r\n      <Grid item xs={12} sm={6}>\r\n        <FormikSelectField\r\n          label=\"Property\"\r\n          formikKey={\"property\"}\r\n          itemArray={propertyData}\r\n          itemValue={(item) => item._id}\r\n          itemLabel={(item) => item.name}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <FormikSelectField\r\n          disabled={values.property === \"\"}\r\n          label={values.property === \"\" ? \"select property first\" : \"Unit\"}\r\n          formikKey={\"unit\"}\r\n          itemArray={\r\n            values.property && propertyData.length > 0\r\n              ? propertyData.filter((p) => p._id === values.property)[0].units\r\n              : [\"\"]\r\n          }\r\n          itemValue={(item) => item._id}\r\n          itemLabel={(item) => item.name}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Grid item>\r\n      <UserFormBase\r\n        label=\"Tenant\"\r\n        current={current}\r\n        handleSubmit={handleSubmit}\r\n        handleDelete={handleDelete}\r\n        handleCancel={handleCancel}\r\n        deleteSubmitting={deleteSubmitting}\r\n        child={child}\r\n        childNamespace=\"tenant\"\r\n        childValidationSchema={validationSchema}\r\n        childInitialValues={initialValues}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n","import Container from \"@mui/material/Container\";\r\nimport PropertyForm from \"../components/forms/PropertyForm\";\r\nimport UserForm from \"../components/forms/UserForm\";\r\nimport MaintenanceForm from \"../components/forms/MaintenanceForm\";\r\nimport { Grid } from \"@mui/material\";\r\nimport UserFormTenant from \"../components/forms/UserFormTenant\";\r\n\r\nexport default function Dashboard() {\r\n  return (\r\n    <Container sx={{ mt: 4, mb: 4 }}>\r\n      Dashboard\r\n      <Grid container spacing={3}>\r\n        {/* <PropertyForm /> */}\r\n        {/* <UserForm /> */}\r\n        <MaintenanceForm />\r\n        <UserFormTenant />\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { DefaultUserImage } from \"../images/images\";\r\nimport { useAuth } from \"../context/useAuthContext\";\r\nimport acct from \"../helpers/accoutTypes\";\r\n\r\nexport default function TenantItem({ tenant }) {\r\n  const { loggedInUser } = useAuth();\r\n  const fullName = (user) => {\r\n    return `${user.first_name}  ${user.last_name}`;\r\n  };\r\n\r\n  return (\r\n    <Grid item sx={{ display: \"flex\" }}>\r\n      <Grid item sx={{ mr: 1 }}>\r\n        <Link\r\n          underline=\"none\"\r\n          component={\r\n            loggedInUser.account_type === acct.tenant ? Link : RouterLink\r\n          }\r\n          to={`/tenants/${tenant._id}`}\r\n        >\r\n          <Avatar\r\n            sx={{ marginRight: \"1em\", width: 60, height: 60 }}\r\n            alt={fullName(tenant.user)}\r\n            src={tenant.user.image_url || DefaultUserImage}\r\n          />\r\n        </Link>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"body1\" color=\"primary\">\r\n          {fullName(tenant.user)}\r\n        </Typography>\r\n        <Typography\r\n          sx={{ display: \"block\" }}\r\n          variant=\"body2\"\r\n          color=\"text.primary\"\r\n        >\r\n          {tenant.user.phone_number}\r\n        </Typography>\r\n        <Typography\r\n          sx={{ display: \"block\" }}\r\n          component=\"span\"\r\n          variant=\"body2\"\r\n          color=\"text.primary\"\r\n        >\r\n          {tenant.user.email}\r\n        </Typography>\r\n        <Typography\r\n          sx={{ display: \"block\" }}\r\n          component=\"span\"\r\n          variant=\"body2\"\r\n          color=\"text.primary\"\r\n        >\r\n          Unit: {tenant.unit.name}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport PropertyItem from \"../../components/PropertyItem\";\r\nimport TenantItem from \"../../components/TenantItem\";\r\nimport UserForm from \"../../components/forms/UserForm\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nexport default function Header({ currentTenant }) {\r\n  const [editMode, setEditMode] = useState(false);\r\n  function toggleEdit() {\r\n    setEditMode(!editMode);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!editMode && (\r\n        <Grid item container spacing={3}>\r\n          {currentTenant.user && <TenantItem tenant={currentTenant} />}\r\n          <Grid item>\r\n            {currentTenant.property && (\r\n              <PropertyItem property={currentTenant.property} />\r\n            )}\r\n          </Grid>\r\n          <Grid item sx={{ flexGrow: 1 }}>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Button variant=\"outlined\" onClick={toggleEdit}>\r\n                edit\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {editMode && (\r\n        <UserForm current={currentTenant} handleCancel={toggleEdit} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport TableView from \"./TableView\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nexport default function SingleTableView({\r\n  label,\r\n  data,\r\n  columns,\r\n  toggleLabel,\r\n  toggleContent,\r\n  children,\r\n}) {\r\n  const [isToggleMode, setIsToggleMode] = useState(false);\r\n  function toggleMode() {\r\n    setIsToggleMode(!isToggleMode);\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {!isToggleMode && (\r\n        <Paper sx={{ p: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n          <Grid container>\r\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\">\r\n              {label}\r\n            </Typography>\r\n\r\n            {toggleLabel && (\r\n              <Grid item sx={{ flexGrow: 1 }}>\r\n                <Grid container justifyContent=\"flex-end\">\r\n                  <Button variant=\"outlined\" onClick={toggleMode}>\r\n                    {toggleLabel}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n\r\n          <TableView data={data} columns={columns}></TableView>\r\n          {children}\r\n        </Paper>\r\n      )}\r\n      {isToggleMode &&\r\n        React.cloneElement(toggleContent, { handleCancel: toggleMode })}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport TenantHeader from \"./TenantHeader\";\r\nimport { getTenantForId } from \"../../helpers/APICalls/tenant\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@mui/material/Link\";\r\nimport currencyformatter from \"../../helpers/currencyFormatter\";\r\nimport LoadingView from \"../../components/LoadingView\";\r\nimport SingleTableView from \"../../components/SingleTableView\";\r\nimport dateFormatter from \"./../../helpers/dateFormatter\";\r\nimport MaintenanceForm from \"../../components/forms/MaintenanceForm\";\r\nimport { useAuth } from \"../../context/useAuthContext\";\r\nimport UserFormTenant from \"../../components/forms/UserFormTenant\";\r\n\r\nexport default function TenantView({ tenantId }) {\r\n  const { loggedInUser } = useAuth();\r\n  const isAdd = tenantId === \"add\";\r\n\r\n  const [maintenanceData, setMaintenanceData] = useState([]);\r\n  const [invoiceData, setInvoiceData] = useState([]);\r\n  const [leaseData, setLeaseData] = useState([]);\r\n  const [tenantData, setTenantData] = useState();\r\n\r\n  useEffect(() => {\r\n    setTenantData(null);\r\n    if (!isAdd && tenantId) {\r\n      getTenantForId(tenantId).then((res) => {\r\n        setTenantData(res);\r\n        setMaintenanceData(res.maintenances);\r\n        setInvoiceData(res.invoices);\r\n        setLeaseData(res.leases);\r\n      });\r\n    }\r\n  }, [tenantId, isAdd]);\r\n\r\n  const maintenanceColumns = [\r\n    {\r\n      label: \"Date\",\r\n      content: (maintenance) => <span>{dateFormatter(maintenance.date)}</span>,\r\n    },\r\n\r\n    {\r\n      label: \"Issue\",\r\n      content: (maintenance) => <span>{maintenance.title}</span>,\r\n    },\r\n    {\r\n      label: \"Location\",\r\n      content: (maintenance) => (\r\n        <span>\r\n          {maintenance.location === \"common\" ? \"common\" : tenantData.unit.name}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      label: \"Status\",\r\n      content: (tenant) => <span>{tenant.status}</span>,\r\n    },\r\n\r\n    {\r\n      label: \"\",\r\n      content: (maintenance) => (\r\n        <Link\r\n          underline=\"none\"\r\n          component={RouterLink}\r\n          to={`/maintenances/${maintenance._id}`}\r\n        >\r\n          <span>view</span>\r\n        </Link>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const invoiceColumns = [\r\n    {\r\n      label: \"amount\",\r\n      content: (invoice) => (\r\n        <span>{currencyformatter.format(invoice.amount)}</span>\r\n      ),\r\n    },\r\n    {\r\n      label: \"due date\",\r\n      content: (invoice) => <span>{dateFormatter(invoice.due_date)}</span>,\r\n    },\r\n    {\r\n      label: \"paid date \",\r\n      content: (invoice) => <span>{dateFormatter(invoice.paid_date)}</span>,\r\n    },\r\n    {\r\n      label: \"\",\r\n      content: (invoice) => (\r\n        <Link\r\n          underline=\"none\"\r\n          component={RouterLink}\r\n          to={`/invoices/${invoice._id}`}\r\n        >\r\n          <span>view</span>\r\n        </Link>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const leaseColumns = [\r\n    {\r\n      label: \"monthly rent\",\r\n      content: (lease) => (\r\n        <span>{currencyformatter.format(lease.monthly_rent)}</span>\r\n      ),\r\n    },\r\n    {\r\n      label: \"start date\",\r\n      content: (lease) => <span>{dateFormatter(lease.start_date)}</span>,\r\n    },\r\n    {\r\n      label: \"end date \",\r\n      content: (lease) => <span>{dateFormatter(lease.end_date)}</span>,\r\n    },\r\n    {\r\n      label: \"\",\r\n      content: (lease) => (\r\n        <Link\r\n          underline=\"none\"\r\n          component={RouterLink}\r\n          to={`/leases/${lease._id}`}\r\n        >\r\n          <span>view</span>\r\n        </Link>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  if (isAdd) {\r\n    return (\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <UserFormTenant />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <LoadingView\r\n      data={tenantData}\r\n      loadingState={(data) => !data}\r\n      notFoundState={(data) => data.message}\r\n    >\r\n      {tenantData && (\r\n        <Grid container spacing={3}>\r\n          <TenantHeader currentTenant={tenantData} />\r\n\r\n          <Grid item xs={12}>\r\n            <SingleTableView\r\n              label={\"Maintenance\"}\r\n              data={maintenanceData}\r\n              columns={maintenanceColumns}\r\n              toggleLabel=\"add\"\r\n              toggleContent={<MaintenanceForm />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <SingleTableView\r\n              label={\"Invoices\"}\r\n              data={invoiceData}\r\n              columns={invoiceColumns}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <SingleTableView\r\n              label={\"Leases\"}\r\n              data={leaseData}\r\n              columns={leaseColumns}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </LoadingView>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SideNav from \"../../components/SideNav\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { DefaultUserImage } from \"../../images/images\";\r\n\r\nexport default function TenantSideNav({ selectedId, data }) {\r\n  const itemContent = (tenant) => (\r\n    <React.Fragment>\r\n      <ListItemAvatar>\r\n        <Avatar\r\n          sx={{ marginRight: \"1em\" }}\r\n          alt={`${tenant.user.first_name}  ${tenant.user.last_name}`}\r\n          src={tenant.user.image_url || DefaultUserImage}\r\n        />\r\n      </ListItemAvatar>\r\n\r\n      <ListItemText\r\n        primary={`${tenant.user.first_name}  ${tenant.user.last_name}`}\r\n        secondary={\r\n          <React.Fragment>\r\n            <Typography\r\n              sx={{ display: \"block\" }}\r\n              component=\"span\"\r\n              variant=\"body2\"\r\n              color=\"text.primary\"\r\n            >\r\n              {tenant.property.address.street_address} | {tenant.unit.name}\r\n            </Typography>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </React.Fragment>\r\n  );\r\n  const sortParams = [\r\n    { label: \"name\", terms: [(item) => item.user.first_name] },\r\n    {\r\n      label: \"location\",\r\n      terms: [(item) => item.property.name, (item) => item.unit.name],\r\n    },\r\n  ];\r\n  const searchParms = (item) => item.name;\r\n\r\n  const collapsedText = {\r\n    primary: (item) => `${item.user.first_name} ${item.user.last_name}`,\r\n    secondary: (item) => `${item.unit.name}`,\r\n  };\r\n  return (\r\n    <SideNav\r\n      selectedId={selectedId}\r\n      data={data}\r\n      path={\"tenants\"}\r\n      itemContent={itemContent}\r\n      sortParams={sortParams}\r\n      searchParms={searchParms}\r\n      collapsedText={collapsedText}\r\n      isAdd={true}\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { getTenants } from \"../../helpers/APICalls/tenant\";\r\nimport TenantView from \"./TenantView\";\r\nimport PgSideAndView from \"../../components/PgSideAndView\";\r\nimport TenantSideNav from \"./TenantsSideNav\";\r\n\r\nexport default function Tenants() {\r\n  let { id } = useParams();\r\n  const [currentTenantId, setCurrentTenantId] = useState();\r\n\r\n  const [tenantData, setTenantData] = useState([]);\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    getTenants().then((res) => {\r\n      setTenantData(res);\r\n      console.log(res);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!id && tenantData.length > 0) {\r\n      setCurrentTenantId(tenantData[0]._id);\r\n      history.replace(`/tenants/${tenantData[0]._id}`);\r\n    } else if (id && tenantData.length > 0) {\r\n      setCurrentTenantId(id);\r\n    }\r\n  }, [history, tenantData, setCurrentTenantId, id]);\r\n\r\n  return (\r\n    <PgSideAndView\r\n      side={<TenantSideNav selectedId={id} data={tenantData} />}\r\n      view={<TenantView tenantId={currentTenantId} />}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport PropertyItem from \"../../components/PropertyItem\";\r\nimport TenantItem from \"../../components/TenantItem\";\r\n\r\nexport default function Header({ currentMaintenance }) {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item container spacing={3}>\r\n        {currentMaintenance.property && (\r\n          <PropertyItem property={currentMaintenance.property} />\r\n        )}\r\n\r\n        {currentMaintenance.tenant && (\r\n          <TenantItem tenant={currentMaintenance.tenant} />\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getMaintenanceForId } from \"../../helpers/APICalls/maintenance\";\r\nimport { Grid } from \"@mui/material\";\r\nimport MaintenanceHeader from \"./MaintenanceHeader\";\r\nimport LoadingView from \"../../components/LoadingView\";\r\nimport SingleTableView from \"../../components/SingleTableView\";\r\nimport dateFormatter from \"./../../helpers/dateFormatter\";\r\nimport MaintenanceForm from \"../../components/forms/MaintenanceForm\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useAuth } from \"../../context/useAuthContext\";\r\n\r\nexport default function MaintenanceView({ maintenanceId }) {\r\n  const { loggedInUser } = useAuth();\r\n  const [maintenanceData, setMaintenanceData] = useState();\r\n  const isAdd = maintenanceId === \"add\";\r\n\r\n  useEffect(() => {\r\n    setMaintenanceData(null);\r\n    if (!isAdd && maintenanceId) {\r\n      getMaintenanceForId(maintenanceId).then((res) => {\r\n        setMaintenanceData(res);\r\n      });\r\n    }\r\n  }, [maintenanceId, isAdd]);\r\n\r\n  const maintenanceColumns = [\r\n    {\r\n      label: \"Date\",\r\n      content: (maintenance) => <span>{dateFormatter(maintenance.date)}</span>,\r\n    },\r\n\r\n    {\r\n      label: \"Issue\",\r\n      content: (maintenance) => <span>{maintenance.title}</span>,\r\n    },\r\n    {\r\n      label: \"Location\",\r\n      content: (maintenance) => (\r\n        <span>\r\n          {maintenance.location === \"common\"\r\n            ? \"common\"\r\n            : maintenance.tenant && maintenance.tenant.unit.name}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      label: \"Status\",\r\n      content: (maintenance) => <span>{maintenance.status}</span>,\r\n    },\r\n  ];\r\n\r\n  if (isAdd) {\r\n    return (\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <MaintenanceForm />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <LoadingView\r\n      data={maintenanceData}\r\n      loadingState={(data) => !data}\r\n      notFoundState={(data) => data.message}\r\n    >\r\n      {maintenanceData && (\r\n        <Grid container spacing={3}>\r\n          <MaintenanceHeader currentMaintenance={maintenanceData} />\r\n          {/* <MaintenanceForm currentMaintenance={maintenanceData} /> */}\r\n          <Grid item xs={12}>\r\n            <SingleTableView\r\n              label={\"Maintenance\"}\r\n              data={[maintenanceData]}\r\n              columns={maintenanceColumns}\r\n              toggleLabel=\"edit\"\r\n              toggleContent={\r\n                <MaintenanceForm currentMaintenance={maintenanceData} />\r\n              }\r\n            >\r\n              <Grid container spacing={0.5} sx={{ mt: 2 }}>\r\n                {maintenanceData.media &&\r\n                  maintenanceData.media.map((media, idx) => (\r\n                    <Grid item sx={{ mr: 1 }} key={idx}>\r\n                      <img\r\n                        src={media}\r\n                        alt={maintenanceData.title}\r\n                        loading=\"lazy\"\r\n                        style={{\r\n                          width: \"200px\",\r\n                          height: \"200px\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  ))}\r\n              </Grid>\r\n              <Typography variant=\"body2\">{maintenanceData.body}</Typography>\r\n            </SingleTableView>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </LoadingView>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SideNav from \"../../components/SideNav\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport dateFormatter from \"./../../helpers/dateFormatter\";\r\n\r\nexport default function MaintenanceSideNav({ selectedId, data }) {\r\n  const itemContent = (maintenance) => (\r\n    <React.Fragment>\r\n      <ListItemText\r\n        primary={maintenance.property.name}\r\n        secondary={\r\n          <React.Fragment>\r\n            <Typography\r\n              sx={{ display: \"block\" }}\r\n              component=\"span\"\r\n              variant=\"body2\"\r\n              color=\"text.primary\"\r\n            >\r\n              {maintenance.location === \"common\"\r\n                ? \"common\"\r\n                : maintenance.tenant.unit.name}{\" \"}\r\n              | {maintenance.title}\r\n            </Typography>\r\n            <Typography\r\n              sx={{ display: \"block\" }}\r\n              component=\"span\"\r\n              variant=\"body2\"\r\n              color=\"text.primary\"\r\n            >\r\n              {dateFormatter(maintenance.date)} | {maintenance.status}\r\n            </Typography>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </React.Fragment>\r\n  );\r\n  const sortParams = [\r\n    { label: \"date\", terms: [(item) => item.date] },\r\n    {\r\n      label: \"location\",\r\n      terms: [(item) => item.property.name, (item) => item.tenant.unit.name],\r\n    },\r\n  ];\r\n  const searchParms = (item) => item.name;\r\n  const collapsedText = {\r\n    primary: (item) => item.title,\r\n    secondary: (maintenance) =>\r\n      maintenance.location === \"common\"\r\n        ? \"common\"\r\n        : maintenance.tenant.unit.name,\r\n  };\r\n  return (\r\n    <SideNav\r\n      selectedId={selectedId}\r\n      data={data}\r\n      path={\"maintenances\"}\r\n      itemContent={itemContent}\r\n      sortParams={sortParams}\r\n      searchParms={searchParms}\r\n      collapsedText={collapsedText}\r\n      isAdd={true}\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { getMaintenances } from \"../../helpers/APICalls/maintenance\";\r\nimport MaintenanceView from \"./MaintenanceView\";\r\nimport PgSideAndView from \"../../components/PgSideAndView\";\r\nimport MaintenanceSideNav from \"./MaintenancesSideNav\";\r\n\r\nexport default function Maintenance() {\r\n  let { id } = useParams();\r\n  const [currentMaintenanceId, setCurrentMaintenanceId] = useState(id);\r\n  const [maintenanceData, setMaintenanceData] = useState([]);\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    getMaintenances().then((res) => {\r\n      console.log(res);\r\n      setMaintenanceData(res);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!id && maintenanceData.length > 0) {\r\n      setCurrentMaintenanceId(maintenanceData[0]._id);\r\n      history.replace(`/maintenances/${maintenanceData[0]._id}`);\r\n    } else if (id && maintenanceData.length > 0) {\r\n      setCurrentMaintenanceId(id);\r\n    }\r\n  }, [history, maintenanceData, setCurrentMaintenanceId, id]);\r\n  return (\r\n    <PgSideAndView\r\n      side={<MaintenanceSideNav selectedId={id} data={maintenanceData} />}\r\n      view={<MaintenanceView maintenanceId={currentMaintenanceId} />}\r\n    />\r\n  );\r\n}\r\n","import serverPath from \"./server\";\r\n\r\nexport async function getInvoices() {\r\n  const fetchOptions = {\r\n    method: \"GET\",\r\n    credentials: \"include\",\r\n  };\r\n  return await fetch(`${serverPath}/invoice`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n\r\nexport async function getInvoiceForId(id) {\r\n  const fetchOptions = {\r\n    method: \"GET\",\r\n    credentials: \"include\",\r\n  };\r\n  return await fetch(`${serverPath}/invoice/${id}`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n","import React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport PropertyItem from \"../../components/PropertyItem\";\r\nimport TenantItem from \"../../components/TenantItem\";\r\n\r\nexport default function Header({ currentInvoice }) {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item container spacing={3}>\r\n        {currentInvoice.property && (\r\n          <PropertyItem property={currentInvoice.property} />\r\n        )}\r\n\r\n        {currentInvoice.tenant && <TenantItem tenant={currentInvoice.tenant} />}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getInvoiceForId } from \"../../helpers/APICalls/invoice\";\r\nimport { Grid } from \"@mui/material\";\r\nimport InvoiceHeader from \"./InvoiceHeader\";\r\nimport currencyformatter from \"../../helpers/currencyFormatter\";\r\nimport LoadingView from \"../../components/LoadingView\";\r\nimport SingleTableView from \"../../components/SingleTableView\";\r\nimport dateFormatter from \"./../../helpers/dateFormatter\";\r\n\r\nexport default function InvoiceView({ invoiceId }) {\r\n  const [invoiceData, setInvoiceData] = useState();\r\n  useEffect(() => {\r\n    if (invoiceId) {\r\n      getInvoiceForId(invoiceId).then((res) => {\r\n        setInvoiceData(res);\r\n      });\r\n    }\r\n  }, [invoiceId]);\r\n  const invoiceColumns = [\r\n    {\r\n      label: \"amount\",\r\n      content: (invoice) => (\r\n        <span>{currencyformatter.format(invoice.amount)}</span>\r\n      ),\r\n    },\r\n    {\r\n      label: \"due date\",\r\n      content: (invoice) => <span>{dateFormatter(invoice.due_date)}</span>,\r\n    },\r\n    {\r\n      label: \"paid date \",\r\n      content: (invoice) => <span>{dateFormatter(invoice.paid_date)}</span>,\r\n    },\r\n  ];\r\n  return (\r\n    <LoadingView\r\n      data={invoiceData}\r\n      loadingState={(data) => !data}\r\n      notFoundState={(data) => data.message}\r\n    >\r\n      {invoiceData && (\r\n        <Grid container spacing={3}>\r\n          <InvoiceHeader currentInvoice={invoiceData} />\r\n          <Grid item xs={12}>\r\n            <SingleTableView\r\n              label={\"Invoice\"}\r\n              data={[invoiceData]}\r\n              columns={invoiceColumns}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </LoadingView>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SideNav from \"../../components/SideNav\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport dateFormatter from \"./../../helpers/dateFormatter\";\r\n\r\nexport default function InvoiceSideNav({ selectedId, data }) {\r\n  const itemContent = (invoice) => (\r\n    <React.Fragment>\r\n      <ListItemText\r\n        primary={invoice.property.name}\r\n        secondary={\r\n          <React.Fragment>\r\n            <Typography\r\n              sx={{ display: \"block\" }}\r\n              component=\"span\"\r\n              variant=\"body2\"\r\n              color=\"text.primary\"\r\n            >\r\n              {`${invoice.tenant.user.first_name} ${invoice.tenant.user.last_name}`}{\" \"}\r\n              |{\" \"}\r\n              {invoice.location === \"common\"\r\n                ? \"common\"\r\n                : invoice.tenant.unit.name}\r\n            </Typography>\r\n            <Typography\r\n              sx={{ display: \"block\" }}\r\n              component=\"span\"\r\n              variant=\"body2\"\r\n              color=\"text.primary\"\r\n            >\r\n              {dateFormatter(invoice.due_date)} |{\" \"}\r\n              {invoice.paid_date ? \"paid\" : \"pending\"}\r\n            </Typography>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </React.Fragment>\r\n  );\r\n  const sortParams = [\r\n    {\r\n      label: \"location\",\r\n      terms: [(item) => item.property.name, (item) => item.tenant.unit.name],\r\n    },\r\n  ];\r\n  const searchParms = (item) => item.name;\r\n  const collapsedText = {\r\n    primary: (item) =>\r\n      `${item.tenant.user.first_name} ${item.tenant.user.last_name}`,\r\n    secondary: (item) => `${dateFormatter(item.due_date)}`,\r\n  };\r\n  return (\r\n    <SideNav\r\n      selectedId={selectedId}\r\n      data={data}\r\n      path={\"invoices\"}\r\n      itemContent={itemContent}\r\n      sortParams={sortParams}\r\n      searchParms={searchParms}\r\n      collapsedText={collapsedText}\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { getInvoices } from \"../../helpers/APICalls/invoice\";\r\nimport InvoiceView from \"./InvoiceView\";\r\nimport PgSideAndView from \"../../components/PgSideAndView\";\r\nimport InvoicesSideNav from \"./InvoicesSideNav\";\r\n\r\nexport default function Invoices() {\r\n  let { id } = useParams();\r\n  const [currentInvoiceId, setCurrentInvoiceId] = useState(id);\r\n\r\n  const [invoiceData, setInvoiceData] = useState([]);\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    getInvoices().then((res) => {\r\n      setInvoiceData(res);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!id && invoiceData.length > 0) {\r\n      setCurrentInvoiceId(invoiceData[0]._id);\r\n      history.replace(`/invoices/${invoiceData[0]._id}`);\r\n    } else if (id && invoiceData.length > 0) {\r\n      setCurrentInvoiceId(id);\r\n    }\r\n  }, [history, invoiceData, setCurrentInvoiceId, id]);\r\n\r\n  return (\r\n    <PgSideAndView\r\n      side={<InvoicesSideNav selectedId={id} data={invoiceData} />}\r\n      view={<InvoiceView invoiceId={currentInvoiceId} />}\r\n    />\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { NavLink as RouterLink } from \"react-router-dom\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FormikTextField from \"../../components/forms/FormikTextField\";\r\nimport { login } from \"../../helpers/APICalls/auth\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/useAuthContext\";\r\n\r\nexport default function LoginForm() {\r\n  const history = useHistory();\r\n  const { updateLoginContext } = useAuth();\r\n\r\n  function handleSubmit(values, { setSubmitting }) {\r\n    console.log(values);\r\n    login(values.email, values.password).then((data) => {\r\n      setSubmitting(true);\r\n      if (data.error) {\r\n        setSubmitting(false);\r\n        // updateSnackBarMessage(data.error.message);\r\n      } else if (data.success) {\r\n        setSubmitting(false);\r\n        console.log(\"LOGIN\", data);\r\n        updateLoginContext(data.success);\r\n        history.push(\"/dashboard\");\r\n      } else {\r\n        // should not get here from backend but this catch is for an unknown issue\r\n        console.error({ data });\r\n\r\n        setSubmitting(false);\r\n        // updateSnackBarMessage(\"An unexpected error occurred. Please try again\");\r\n      }\r\n    });\r\n  }\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().email().required(\"email is required\"),\r\n    password: Yup.string().required(\"password is required\"),\r\n  });\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Log In\r\n        </Typography>\r\n        <Formik\r\n          enableReinitialize\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            handleChange,\r\n            values,\r\n            touched,\r\n            errors,\r\n            isSubmitting,\r\n          }) => (\r\n            <form onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n              <FormikTextField\r\n                label=\"Email Address\"\r\n                formikKey=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n              <FormikTextField\r\n                label=\"Password\"\r\n                formikKey=\"password\"\r\n                type=\"password\"\r\n              />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n              >\r\n                Log In\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    Forgot password?\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link component={RouterLink} to=\"/signup\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Container from \"@mui/material/Container\";\r\nimport LoginForm from \"../../components/forms/LoginForm\";\r\nimport { Button } from \"@mui/material\";\r\nimport { login } from \"../../helpers/APICalls/auth\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { useAuth } from \"../../context/useAuthContext\";\r\n\r\nexport default function LogIn() {\r\n  const history = useHistory();\r\n  const { updateLoginContext } = useAuth();\r\n\r\n  const demoLogin = (email, password) => {\r\n    login(email, password).then((data) => {\r\n      if (data.success) {\r\n        updateLoginContext(data.success, false);\r\n        history.push(\"/dashboard\");\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <LoginForm></LoginForm>\r\n\r\n      <Grid container direction=\"column\" sx={{ mt: 2 }} spacing={2}>\r\n        <Button onClick={() => demoLogin(\"owner1@gmail.com\", \"123\")}>\r\n          Demo Owner1 Login\r\n        </Button>\r\n        <Button onClick={() => demoLogin(\"owner2@gmail.com\", \"123\")}>\r\n          Demo Owner2 Login\r\n        </Button>\r\n        <Button onClick={() => demoLogin(\"tenb1@gmail.com\", \"123\")}>\r\n          tenb1 Login\r\n        </Button>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import serverPath from \"./server\";\r\n\r\nexport async function getLeases() {\r\n  const fetchOptions = {\r\n    method: \"GET\",\r\n    credentials: \"include\",\r\n  };\r\n  return await fetch(`${serverPath}/lease`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n\r\nexport async function getLeaseForId(id) {\r\n  const fetchOptions = {\r\n    method: \"GET\",\r\n    credentials: \"include\",\r\n  };\r\n  return await fetch(`${serverPath}/lease/${id}`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: \"Unable to connect to server. Please try again\" },\r\n    }));\r\n}\r\n","import React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport PropertyItem from \"../../components/PropertyItem\";\r\nimport TenantItem from \"../../components/TenantItem\";\r\n\r\nexport default function Header({ currentLease }) {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item container spacing={3}>\r\n        {currentLease.property && (\r\n          <PropertyItem property={currentLease.property} />\r\n        )}\r\n\r\n        {currentLease.tenant && <TenantItem tenant={currentLease.tenant} />}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getLeaseForId } from \"../../helpers/APICalls/lease\";\r\nimport { Grid } from \"@mui/material\";\r\nimport LeaseHeader from \"./LeaseHeader\";\r\nimport currencyformatter from \"../../helpers/currencyFormatter\";\r\nimport LoadingView from \"../../components/LoadingView\";\r\nimport SingleTableView from \"../../components/SingleTableView\";\r\nimport dateFormatter from \"./../../helpers/dateFormatter\";\r\n\r\nexport default function LeaseView({ leaseId }) {\r\n  const [leaseData, setLeaseData] = useState();\r\n  useEffect(() => {\r\n    if (leaseId) {\r\n      getLeaseForId(leaseId).then((res) => {\r\n        setLeaseData(res);\r\n      });\r\n    }\r\n  }, [leaseId]);\r\n  const leaseColumns = [\r\n    {\r\n      label: \"monthly rent\",\r\n      content: (lease) => (\r\n        <span>{currencyformatter.format(lease.monthly_rent)}</span>\r\n      ),\r\n    },\r\n    {\r\n      label: \"start date\",\r\n      content: (lease) => <span>{dateFormatter(lease.start_date)}</span>,\r\n    },\r\n    {\r\n      label: \"end date\",\r\n      content: (lease) => <span>{dateFormatter(lease.end_date)}</span>,\r\n    },\r\n  ];\r\n  return (\r\n    <LoadingView\r\n      data={leaseData}\r\n      loadingState={(data) => !data}\r\n      notFoundState={(data) => data.message}\r\n    >\r\n      {leaseData && (\r\n        <Grid container spacing={3}>\r\n          <LeaseHeader currentLease={leaseData} />\r\n          <Grid item xs={12}>\r\n            <SingleTableView\r\n              label={\"Lease\"}\r\n              data={[leaseData]}\r\n              columns={leaseColumns}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </LoadingView>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SideNav from \"../../components/SideNav\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport currencyformatter from \"../../helpers/currencyFormatter\";\r\nimport dateFormatter from \"./../../helpers/dateFormatter\";\r\n\r\nexport default function LeaseSideNav({ selectedId, data }) {\r\n  const itemContent = (lease) => (\r\n    <React.Fragment>\r\n      <ListItemText\r\n        primary={lease.property.name}\r\n        secondary={\r\n          <React.Fragment>\r\n            <Typography\r\n              sx={{ display: \"block\" }}\r\n              component=\"span\"\r\n              variant=\"body2\"\r\n              color=\"text.primary\"\r\n            >\r\n              {`${lease.tenant.user.first_name} ${lease.tenant.user.last_name}`}{\" \"}\r\n              |{\" \"}\r\n              {lease.location === \"common\" ? \"common\" : lease.tenant.unit.name}\r\n            </Typography>\r\n            <Typography\r\n              sx={{ display: \"block\" }}\r\n              component=\"span\"\r\n              variant=\"body2\"\r\n              color=\"text.primary\"\r\n            >\r\n              {currencyformatter.format(lease.monthly_rent)} |{\" \"}\r\n              {dateFormatter(lease.end_date)}\r\n            </Typography>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </React.Fragment>\r\n  );\r\n  const sortParams = [\r\n    {\r\n      label: \"location\",\r\n      terms: [(item) => item.property.name, (item) => item.tenant.unit.name],\r\n    },\r\n  ];\r\n  const searchParms = (item) => item.name;\r\n  const collapsedText = {\r\n    primary: (item) =>\r\n      `${item.tenant.user.first_name} ${item.tenant.user.last_name}`,\r\n    secondary: (item) => `${dateFormatter(item.end_date)}`,\r\n  };\r\n  return (\r\n    <SideNav\r\n      selectedId={selectedId}\r\n      data={data}\r\n      path={\"leases\"}\r\n      itemContent={itemContent}\r\n      sortParams={sortParams}\r\n      searchParms={searchParms}\r\n      collapsedText={collapsedText}\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { getLeases } from \"../../helpers/APICalls/lease\";\r\nimport LeaseView from \"./LeaseView\";\r\nimport PgSideAndView from \"../../components/PgSideAndView\";\r\nimport LeasesSideNav from \"./LeasesSideNav\";\r\n\r\nexport default function Leases() {\r\n  let { id } = useParams();\r\n  const [currentLeaseId, setCurrentLeaseId] = useState(id);\r\n  const [leaseData, setLeaseData] = useState([]);\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    getLeases().then((res) => {\r\n      setLeaseData(res);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!id && leaseData.length > 0) {\r\n      setCurrentLeaseId(leaseData[0]._id);\r\n      history.replace(`/leases/${leaseData[0]._id}`);\r\n    } else if (id && leaseData.length > 0) {\r\n      setCurrentLeaseId(id);\r\n    }\r\n  }, [history, leaseData, setCurrentLeaseId, id]);\r\n\r\n  return (\r\n    <PgSideAndView\r\n      side={<LeasesSideNav selectedId={id} data={leaseData} />}\r\n      view={<LeaseView leaseId={currentLeaseId} />}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../context/useAuthContext\";\nimport { CircularProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box } from \"@mui/material\";\n\nexport default function ProtectedRoute({ Comp, allow, ...rest }) {\n  const { loggedInUser } = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (loggedInUser === undefined) {\n          return (\n            <Grid container>\n              <Box mt={20}></Box>\n              <CircularProgress></CircularProgress>\n            </Grid>\n          );\n        } else {\n          if (\n            (loggedInUser && !allow) ||\n            (loggedInUser && allow && allow.includes(loggedInUser.account_type))\n          ) {\n            return <Comp {...rest} {...props} />;\n          } else {\n            return (\n              <Redirect\n                to={{\n                  pathname: \"/unauthorized\",\n                  state: {\n                    from: props.location,\n                  },\n                }}\n              />\n            );\n          }\n        }\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth } from \"../context/useAuthContext\";\nimport { CircularProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box } from \"@mui/material\";\n\nexport default function RedirectLoggedInRoute({ Comp, ...rest }) {\n  const { loggedInUser } = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (loggedInUser === undefined) {\n          return (\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Box mt={20}></Box>\n              <CircularProgress></CircularProgress>\n            </Grid>\n          );\n        } else {\n          return <Comp {...rest} {...props} />;\n        }\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Link from \"@mui/material/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Typography from \"@mui/material/Typography\";\nimport { Box } from \"@mui/material\";\n\nexport default function Unauthorized() {\n  return (\n    <Grid container component=\"main\" alignItems=\"center\" direction=\"column\">\n      <Box mt={5} />\n      <Typography variant=\"h3\" color=\"inherit\" noWrap>\n        Unauthorized\n      </Typography>\n      <Link\n        component={RouterLink}\n        to=\"/login\"\n        variant=\"button\"\n        underline=\"always\"\n        color=\"textPrimary\"\n      >\n        Log In\n      </Link>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport {\r\n  newTenant,\r\n  editTenant,\r\n  deleteTenant,\r\n} from \"../../helpers/APICalls/tenant\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSnackBar } from \"../../context/useSnackbarContext\";\r\nimport { submittedForm } from \"./formHelper\";\r\nimport UserFormBase from \"./UserFormBase\";\r\n\r\nexport default function UserFormOwner({ current, handleCancel }) {\r\n  const history = useHistory();\r\n  const { updateSnackBarMessage } = useSnackBar();\r\n  const [deleteSubmitting, setDeleteSubmitting] = useState(false);\r\n\r\n  const initialValues = {\r\n    account_type: \"owner\",\r\n  };\r\n\r\n  const validationSchema = {};\r\n\r\n  function handleSubmit(values, { setSubmitting }) {\r\n    if (current) {\r\n      editTenant(current.user._id, current._id, values).then((data) => {\r\n        setSubmitting(true);\r\n        const onSuccess = () => history.go(0);\r\n        submittedForm(updateSnackBarMessage, setSubmitting, data, onSuccess);\r\n      });\r\n    } else {\r\n      newTenant(values).then((data) => {\r\n        const onSuccess = () => {\r\n          history.push(`/dashboard`);\r\n        };\r\n        submittedForm(updateSnackBarMessage, setSubmitting, data, onSuccess);\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleDelete() {\r\n    deleteTenant(current._id).then((data) => {\r\n      function onSuccess() {\r\n        history.push({\r\n          pathname: `/tenants`,\r\n        });\r\n      }\r\n      submittedForm(\r\n        updateSnackBarMessage,\r\n        setDeleteSubmitting,\r\n        data,\r\n        onSuccess\r\n      );\r\n    });\r\n  }\r\n\r\n  const child = (values, namespace) => <></>;\r\n\r\n  return (\r\n    <Grid item>\r\n      <UserFormBase\r\n        label=\"Owner\"\r\n        current={current}\r\n        handleSubmit={handleSubmit}\r\n        handleDelete={handleDelete}\r\n        handleCancel={handleCancel}\r\n        deleteSubmitting={deleteSubmitting}\r\n        child={child}\r\n        childNamespace=\"owner\"\r\n        childValidationSchema={validationSchema}\r\n        childInitialValues={initialValues}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport UserFormOwner from \"../../components/forms/UserFormOwner\";\r\n\r\nexport default function SignUp() {\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Grid container direction=\"column\" sx={{ mt: 2 }} spacing={2}>\r\n        <UserFormOwner />\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport UserFormOwner from \"../../components/forms/UserFormOwner\";\r\nimport { useAuth } from \"../../context/useAuthContext\";\r\n\r\nexport default function Profile() {\r\n  const { loggedInUser } = useAuth();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Grid container direction=\"column\" sx={{ mt: 2 }} spacing={2}>\r\n        <UserFormOwner current={loggedInUser} />\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import { ThemeProvider } from \"@mui/material/styles\";\nimport { theme } from \"./themes/theme\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport Properties from \"./pages/Properties/Properties\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Tenants from \"./pages/Tenants/Tenants\";\nimport Maintenances from \"./pages/Maintenances/Maintenances\";\nimport Invoices from \"./pages/Invoices/Invoices\";\nimport Login from \"./pages/Login/Login\";\nimport Leases from \"./pages/Leases/Leases\";\nimport { SnackBarProvider } from \"./context/useSnackbarContext\";\nimport { AuthProvider } from \"./context/useAuthContext\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport RedirectLoggedInRoute from \"./components/RedirectLoggedInRoute\";\nimport Unauthorized from \"./pages/Unauthorized\";\nimport Signup from \"./pages/Signup/Signup\";\nimport Profile from \"./pages/Profile/Profile\";\nimport acct from \"./helpers/accoutTypes\";\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <SnackBarProvider>\n        <BrowserRouter>\n          <AuthProvider>\n            <NavBar></NavBar>\n            <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <ProtectedRoute exact path=\"/dashboard\" Comp={Dashboard} />\n\n              <ProtectedRoute\n                path=\"/properties/:id\"\n                Comp={Properties}\n                allow={[acct.owner]}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/properties\"\n                Comp={Properties}\n                allow={[acct.owner]}\n              />\n\n              <ProtectedRoute\n                exact\n                path=\"/tenants/:id\"\n                Comp={Tenants}\n                allow={[acct.owner]}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/tenants\"\n                Comp={Tenants}\n                allow={[acct.owner]}\n              />\n\n              <ProtectedRoute\n                exact\n                path=\"/maintenances/:id\"\n                Comp={Maintenances}\n              />\n              <ProtectedRoute exact path=\"/maintenances\" Comp={Maintenances} />\n\n              <ProtectedRoute exact path=\"/invoices/:id\" Comp={Invoices} />\n              <ProtectedRoute exact path=\"/invoices\" Comp={Invoices} />\n\n              <ProtectedRoute exact path=\"/leases/:id\" Comp={Leases} />\n              <ProtectedRoute exact path=\"/leases\" Comp={Leases} />\n\n              <ProtectedRoute exact path=\"/profile\" Comp={Profile} />\n              <RedirectLoggedInRoute exact path=\"/login\" Comp={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n\n              <Route exact path=\"/unauthorized\" component={Unauthorized} />\n\n              <Route path=\"*\">\n                <Redirect to=\"/\" />\n              </Route>\n            </Switch>\n          </AuthProvider>\n        </BrowserRouter>\n      </SnackBarProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}